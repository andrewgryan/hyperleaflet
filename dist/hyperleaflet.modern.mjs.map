{"version":3,"file":"hyperleaflet.modern.mjs","sources":["../src/constants.js","../src/hyperleaflet.js"],"sourcesContent":["import L from 'leaflet';\r\n\r\nconst TILE_LAYERS = {\r\n  OpenStreetMap: L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  }),\r\n  EsriWorldImagery: L.tileLayer(\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n    {\r\n      attribution:\r\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n    },\r\n  ),\r\n};\r\n\r\nexport default TILE_LAYERS;\r\n","import L from 'leaflet';\nimport { defineExtension } from 'htmx.org';\nimport TILE_LAYERS from './constants';\n\nconst hyperleaflet = (function hyperleaflet() {\n  if (typeof L === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error('Hyperleaf can not access Leaflet');\n    return undefined;\n  }\n\n  const mapDiv = document.querySelector('#map');\n  const tileLayerDivs = mapDiv.querySelectorAll('[data-tile]');\n\n  const initalMapAttributes = {\n    center: [0, 0],\n    zoom: 1,\n    tile: TILE_LAYERS.OpenStreetMap,\n  };\n\n  const { dataset } = mapDiv;\n\n  const center = dataset?.center.split(',') || initalMapAttributes.center.center;\n  const zoom = dataset?.zoom || initalMapAttributes.zoom;\n  let { tile } = initalMapAttributes;\n\n  const tiles = {};\n\n  tileLayerDivs.forEach((tileLayer) => {\n    const { dataset: tileLayerDataset } = tileLayer;\n    const tileLayerName = tileLayerDataset.tile;\n    if (tileLayerName in TILE_LAYERS) {\n      const currentTile = TILE_LAYERS[tileLayerName];\n      currentTile.options.minZoom = tileLayerDataset.minZoom;\n      currentTile.options.maxZoom = tileLayerDataset.maxZoom;\n      tiles[tileLayerName] = currentTile;\n      if ('default' in tileLayerDataset) {\n        tile = currentTile;\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(`${tileLayerName} is not in: \\n${Object.keys(TILE_LAYERS).join('\\n')}`);\n    }\n  });\n\n  const map = L.map(mapDiv).setView(center, zoom);\n\n  if (Object.keys(tiles).length) {\n    L.control.layers(tiles).addTo(map);\n  }\n  tile.addTo(map);\n\n  const leafletObjects = {};\n\n  const proxy = new Proxy(leafletObjects, {\n    set(target, property, value) {\n      const point = L.marker(value.split(',')).addTo(map);\n      target[property] = point;\n      return true;\n    },\n    deleteProperty(target, property) {\n      target[property].remove();\n      delete target[property];\n      return true;\n    },\n  });\n\n  const getDifference = (original, current) => {\n    const originalList = Object.keys(original);\n    const newsList = Object.keys(current);\n\n    const adds = newsList.filter((item) => !originalList.includes(item));\n    const deletes = originalList.filter((item) => !newsList.includes(item));\n\n    return { adds, deletes };\n  };\n\n  const processHyperleafTable = (target) => {\n    const rowNodeList = target.querySelectorAll('[data-id]');\n    const rowList = Array.from(rowNodeList);\n    const currentObjects = rowList.reduce((curr, next) => ({ ...curr, [next.dataset.id]: next.dataset.latlng }), {});\n    const difference = getDifference(leafletObjects, currentObjects);\n\n    difference.adds.forEach((row) => {\n      proxy[row] = currentObjects[row];\n    });\n    difference.deletes.forEach((row) => {\n      delete proxy[row];\n    });\n  };\n\n  defineExtension('leaflet', {\n    onEvent: (name) => {\n      if (['htmx:afterProcessNode', 'htmx:afterOnLoad'].includes(name)) {\n        const hyperleafTable = document.querySelector('[hx-ext=leaflet]');\n        processHyperleafTable(hyperleafTable);\n      }\n    },\n  });\n\n  return { map };\n})();\n\nexport default hyperleaflet;\n"],"names":["TILE_LAYERS","OpenStreetMap","L","tileLayer","attribution","EsriWorldImagery","hyperleaflet","console","error","mapDiv","document","querySelector","tileLayerDivs","querySelectorAll","initalMapAttributes","center","zoom","tile","dataset","split","tiles","forEach","tileLayerDataset","tileLayerName","currentTile","options","minZoom","maxZoom","warn","Object","keys","join","map","setView","length","control","layers","addTo","leafletObjects","proxy","set","target","property","value","point","marker","deleteProperty","remove","defineExtension","onEvent","name","includes","rowNodeList","currentObjects","Array","from","reduce","curr","next","id","latlng","difference","original","current","originalList","newsList","adds","filter","item","deletes","getDifference","row","processHyperleafTable"],"mappings":"sSAEA,MAAMA,EAAc,CAClBC,cAAeC,EAAEC,UAAU,iDAAkD,CAC3EC,YAAa,8EAEfC,iBAAkBH,EAAEC,UAClB,gGACA,CACEC,YACE,mJCNFE,EAAgB,WACpB,QAAiB,IAALJ,EAGV,YADAK,QAAQC,MAAM,oCAIhB,MAAYC,EAAGC,SAASC,cAAc,QACnBC,EAAGH,EAAOI,iBAAiB,eAExCC,EAAsB,CAC1BC,OAAQ,CAAC,EAAG,GACZC,KAAM,EACNC,KAAMjB,EAAYC,gBAGdiB,QAAEA,GAAYT,EAERM,GAAGG,MAAAA,OAAAA,EAAAA,EAASH,OAAOI,MAAM,OAAQL,EAAoBC,OAAOA,OAC9DC,GAAGE,MAAAA,OAAAA,EAAAA,EAASF,OAAQF,EAAoBE,KAClD,IAAIC,KAAEA,GAASH,EAEf,MAAWM,EAAG,CAAA,EAEdR,EAAcS,QAASlB,IACrB,MAAQe,QAASI,GAAqBnB,EAChCoB,EAAgBD,EAAiBL,KACvC,GAAIM,KAAiBvB,EAAa,CAChC,MAAiBwB,EAAGxB,EAAYuB,GAChCC,EAAYC,QAAQC,QAAUJ,EAAiBI,QAC/CF,EAAYC,QAAQE,QAAUL,EAAiBK,QAC/CP,EAAMG,GAAiBC,EACnB,YAAaF,IACfL,EAAOO,EAEX,MAEEjB,QAAQqB,KAAM,GAAEL,kBAA8BM,OAAOC,KAAK9B,GAAa+B,KAAK,QAC9E,GAGF,MAAMC,EAAM9B,EAAE8B,IAAIvB,GAAQwB,QAAQlB,EAAQC,GAEtCa,OAAOC,KAAKV,GAAOc,QACrBhC,EAAEiC,QAAQC,OAAOhB,GAAOiB,MAAML,GAEhCf,EAAKoB,MAAML,GAEX,MAAoBM,EAAG,CAAA,EAEjBC,EAAQ,UAAUD,EAAgB,CACtCE,IAAIC,EAAQC,EAAUC,GACpB,MAAMC,EAAQ1C,EAAE2C,OAAOF,EAAMxB,MAAM,MAAMkB,MAAML,GAE/C,OADAS,EAAOC,GAAYE,GAErB,CAAA,EACAE,eAAc,CAACL,EAAQC,KACrBD,EAAOC,GAAUK,gBACJN,EAACC,IACP,KAqCX,OATAM,EAAgB,UAAW,CACzBC,QAAUC,IACJ,CAAC,wBAAyB,oBAAoBC,SAASD,IAhBhCT,KAC7B,MAAMW,EAgBqB1C,SAASC,cAAc,oBAhBvBE,iBAAiB,aAEtCwC,EADUC,MAAMC,KAAKH,GACII,OAAO,CAACC,EAAMC,SAAeD,EAAI,CAAE,CAACC,EAAKxC,QAAQyC,IAAKD,EAAKxC,QAAQ0C,SAAW,CAAA,GAC7FC,EAdI,EAACC,EAAUC,KAC/B,MAAkBC,EAAGnC,OAAOC,KAAKgC,GAC3BG,EAAWpC,OAAOC,KAAKiC,GAK7B,MAAO,CAAEG,KAHID,EAASE,OAAQC,IAAUJ,EAAab,SAASiB,IAG/CC,QAFCL,EAAaG,OAAQC,IAAUH,EAASd,SAASiB,IAE1C,EAOJE,CAAchC,EAAgBe,GAEjDQ,EAAWK,KAAK7C,QAASkD,IACvBhC,EAAMgC,GAAOlB,EAAekB,EAAG,GAEjCV,EAAWQ,QAAQhD,QAASkD,aACbA,EACf,IAOIC,EACF,IAIG,CAAExC,MACX,CAjGsB"}