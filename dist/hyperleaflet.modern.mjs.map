{"version":3,"file":"hyperleaflet.modern.mjs","sources":["../src/constants.js","../src/events.js","../src/hyperleaflet.js","../src/leaflet_utils.js"],"sourcesContent":["import L from 'leaflet';\r\n\r\nconst TILE_LAYERS = {\r\n  OpenStreetMap: L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  }),\r\n  EsriWorldImagery: L.tileLayer(\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n    {\r\n      attribution:\r\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n    },\r\n  ),\r\n};\r\n\r\nexport default TILE_LAYERS;\r\n","export default function initMapEvents(map) {\r\n  map.on('click', (e) => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('mapclick', { detail: { point: e.latlng } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n\r\n  map.on('zoomend', () => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('mapzoom', { detail: { zoom: map.getZoom() } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n\r\n  map.on('move', () => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('mapmove', { detail: { bbox: map.getBounds(), center: map.getCenter() } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n}\r\n\r\nexport function setGeometryEvents(geometry, id) {\r\n  geometry.on('click', (e) => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('pointclick', { detail: { point: e.latlng, rowId: id } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n}","import L from 'leaflet';\nimport { defineExtension } from 'htmx.org';\nimport TILE_LAYERS from './constants';\nimport initEvents from './events';\nimport createLeafletObject from './leaflet_utils';\n\nconst hyperleaflet = (function hyperleaflet() {\n  if (typeof L === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error('Hyperleaf can not access Leaflet');\n    return undefined;\n  }\n\n  const debugMode = document.createElement('script');\n  debugMode.type = 'application/json';\n  debugMode.innerText = `{}`;\n  document.body.appendChild(debugMode);\n\n  const mapDiv = document.querySelector('#map');\n  const tileLayerDivs = mapDiv.querySelectorAll('[data-tile]');\n\n  const initalMapAttributes = {\n    center: [0, 0],\n    zoom: 1,\n    tile: TILE_LAYERS.OpenStreetMap,\n  };\n\n  const { dataset } = mapDiv;\n\n  const center = dataset?.center.split(',') || initalMapAttributes.center.center;\n  const zoom = dataset?.zoom || initalMapAttributes.zoom;\n  let { tile } = initalMapAttributes;\n\n  const tiles = {};\n\n  tileLayerDivs.forEach((tileLayer) => {\n    const { dataset: tileLayerDataset } = tileLayer;\n    const tileLayerName = tileLayerDataset.tile;\n    if (tileLayerName in TILE_LAYERS) {\n      const currentTile = TILE_LAYERS[tileLayerName];\n      currentTile.options.minZoom = tileLayerDataset.minZoom;\n      currentTile.options.maxZoom = tileLayerDataset.maxZoom;\n      tiles[tileLayerName] = currentTile;\n      if ('default' in tileLayerDataset) {\n        tile = currentTile;\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(`${tileLayerName} is not in: \\n${Object.keys(TILE_LAYERS).join('\\n')}`);\n    }\n  });\n\n  const map = L.map(mapDiv).setView(center, zoom);\n\n  initEvents(map);\n\n  if (Object.keys(tiles).length) {\n    L.control.layers(tiles).addTo(map);\n  }\n  tile.addTo(map);\n\n  const leafletObjects = {};\n\n  const proxy = new Proxy(leafletObjects, {\n    set(target, property, value) {\n      const geometry = createLeafletObject(value);\n      if (geometry) {\n        geometry.addTo(map)\n        target[property] = geometry;\n      } else {\n        console.warn(`Geometry with ${property} can not be created`);\n      }\n      return true;\n    },\n    deleteProperty(target, property) {\n      target[property].remove();\n      delete target[property];\n      return true;\n    },\n  });\n\n  const getDifference = (original, current) => {\n    const originalList = Object.keys(original);\n    const newsList = Object.keys(current);\n\n    const adds = newsList.filter((item) => !originalList.includes(item));\n    const deletes = originalList.filter((item) => !newsList.includes(item));\n\n    return { adds, deletes };\n  };\n\n  const processHyperleafTable = (target) => {\n    const debugData = JSON.parse(debugMode.text);\n    const rowNodeList = target.querySelectorAll('[data-id]');\n    const rowList = Array.from(rowNodeList);\n    console.log(new Set(rowList));\n    const currentObjects = rowList.reduce(\n      (curr, next) => ({ ...curr, [next.dataset.id]: { ...next.dataset } }),\n      {},\n    );\n\n    const difference = getDifference(leafletObjects, currentObjects);\n    difference.adds.forEach((row) => {\n      debugData[row] = JSON.parse(currentObjects[row].geometry);\n      proxy[row] = currentObjects[row];\n    });\n    difference.deletes.forEach((row) => {\n      delete debugData[row];\n      delete proxy[row];\n    });\n    rowNodeList.forEach((row) => {\n      row.removeAttribute('data-geometry');\n    });\n    debugMode.text = JSON.stringify(debugData, null, 2);\n  };\n\n  defineExtension('leaflet', {\n    onEvent: (name) => {\n      if (['htmx:afterProcessNode', 'htmx:afterOnLoad'].includes(name)) {\n        const hyperleafTable = document.querySelector('[hx-ext=leaflet]');\n        processHyperleafTable(hyperleafTable);\n      }\n    },\n  });\n\n  return { map };\n})();\n\nexport default hyperleaflet;\n","import L from 'leaflet';\r\nimport { setGeometryEvents } from './events';\r\n\r\nexport default function createLeafletObject(row) {\r\n  const { geometry, popup, geometryType, id } = row;\r\n  const parsedGeometry = JSON.parse(geometry);\r\n  switch (geometryType) {\r\n    case 'Point': {\r\n      const marker = L.marker(parsedGeometry);\r\n      if (popup) {\r\n        marker.bindPopup(popup);\r\n      }\r\n      setGeometryEvents(marker, id);\r\n      return marker;\r\n    }\r\n    case 'LineString': {\r\n      const flippedGeometry = L.GeoJSON.coordsToLatLngs(parsedGeometry, 1);\r\n      const line = L.polyline(flippedGeometry);\r\n      if (popup) {\r\n        line.bindPopup(popup);\r\n      }\r\n      setGeometryEvents(line, id);\r\n      return line;\r\n    }\r\n    case 'Polygon': {\r\n      console.log(parsedGeometry);\r\n      const flippedGeometry = L.GeoJSON.coordsToLatLngs(parsedGeometry, 1);\r\n      console.log(flippedGeometry);\r\n      const polygon = L.polygon(flippedGeometry);\r\n      if (popup) {\r\n        polygon.bindPopup(popup);\r\n      }\r\n      setGeometryEvents(polygon, id);\r\n      return polygon;\r\n    }\r\n    default: {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`${geometryType} is not supported`);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"],"names":["TILE_LAYERS","OpenStreetMap","L","tileLayer","attribution","EsriWorldImagery","setGeometryEvents","geometry","id","on","e","elem","document","getElementById","event","CustomEvent","detail","point","latlng","rowId","dispatchEvent","hyperleaflet","console","error","debugMode","createElement","type","innerText","body","appendChild","querySelector","tileLayerDivs","mapDiv","querySelectorAll","center","zoom","tile","dataset","split","initalMapAttributes","forEach","tileLayerDataset","tileLayerName","currentTile","options","minZoom","maxZoom","tiles","warn","Object","keys","join","map","setView","getZoom","bbox","getBounds","getCenter","initEvents","length","control","layers","addTo","Proxy","leafletObjects","set","target","property","value","row","popup","geometryType","parsedGeometry","JSON","parse","marker","bindPopup","flippedGeometry","GeoJSON","coordsToLatLngs","line","polyline","log","polygon","createLeafletObject","deleteProperty","remove","defineExtension","onEvent","name","includes","text","rowList","Array","from","rowNodeList","Set","currentObjects","reduce","curr","next","difference","original","current","originalList","adds","newsList","filter","item","deletes","getDifference","debugData","proxy","removeAttribute","stringify","processHyperleafTable"],"mappings":"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"}