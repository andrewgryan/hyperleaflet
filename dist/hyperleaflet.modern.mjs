import e from"leaflet";import{defineExtension as t}from"htmx.org";function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e},o.apply(this,arguments)}const n={OpenStreetMap:e.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}),EsriWorldImagery:e.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"})};function r(e,t){e.on("click",e=>{const o=document.getElementById("map"),n=new CustomEvent("pointclick",{detail:{point:e.latlng,rowId:t}});o.dispatchEvent(n)})}const a=function(){if(void 0===e)return void console.error("Hyperleaf can not access Leaflet");const a=document.createElement("script");a.type="application/json",a.innerText="{}",document.body.appendChild(a);const c=document.querySelector("#map"),s=c.querySelectorAll("[data-tile]"),i={center:[0,0],zoom:1,tile:n.OpenStreetMap},{dataset:l}=c,d=(null==l?void 0:l.center.split(","))||i.center.center,p=(null==l?void 0:l.zoom)||i.zoom;let{tile:m}=i;const u={};s.forEach(e=>{const{dataset:t}=e,o=t.tile;if(o in n){const e=n[o];e.options.minZoom=t.minZoom,e.options.maxZoom=t.maxZoom,u[o]=e,"default"in t&&(m=e)}else console.warn(`${o} is not in: \n${Object.keys(n).join("\n")}`)});const y=e.map(c).setView(d,p);!function(e){e.on("click",e=>{const t=document.getElementById("map"),o=new CustomEvent("mapclick",{detail:{point:e.latlng}});t.dispatchEvent(o)}),e.on("zoomend",()=>{const t=document.getElementById("map"),o=new CustomEvent("mapzoom",{detail:{zoom:e.getZoom()}});t.dispatchEvent(o)}),e.on("move",()=>{const t=document.getElementById("map"),o=new CustomEvent("mapmove",{detail:{bbox:e.getBounds(),center:e.getCenter()}});t.dispatchEvent(o)})}(y),Object.keys(u).length&&e.control.layers(u).addTo(y),m.addTo(y);const g={},f=new Proxy(g,{set(t,o,n){const a=function(t){const{geometry:o,popup:n,geometryType:a,id:c}=t,s=JSON.parse(o);switch(a){case"Point":{const t=e.marker(s);return n&&t.bindPopup(n),r(t,c),t}case"LineString":{const t=e.GeoJSON.coordsToLatLngs(s,1),o=e.polyline(t);return n&&o.bindPopup(n),r(o,c),o}case"Polygon":{console.log(s);const t=e.GeoJSON.coordsToLatLngs(s,1);console.log(t);const o=e.polygon(t);return n&&o.bindPopup(n),r(o,c),o}default:return console.warn(`${a} is not supported`),null}}(n);return a?(a.addTo(y),t[o]=a):console.warn(`Geometry with ${o} can not be created`),!0},deleteProperty:(e,t)=>(e[t].remove(),delete e[t],!0)});return t("leaflet",{onEvent:e=>{["htmx:afterProcessNode","htmx:afterOnLoad"].includes(e)&&(e=>{const t=JSON.parse(a.text),n=e.querySelectorAll("[data-id]"),r=Array.from(n);console.log(new Set(r));const c=r.reduce((e,t)=>o({},e,{[t.dataset.id]:o({},t.dataset)}),{}),s=((e,t)=>{const o=Object.keys(e),n=Object.keys(t);return{adds:n.filter(e=>!o.includes(e)),deletes:o.filter(e=>!n.includes(e))}})(g,c);s.adds.forEach(e=>{t[e]=JSON.parse(c[e].geometry),f[e]=c[e]}),s.deletes.forEach(e=>{delete t[e],delete f[e]}),n.forEach(e=>{e.removeAttribute("data-geometry")}),a.text=JSON.stringify(t,null,2)})(document.querySelector("[hx-ext=leaflet]"))}}),{map:y}}();export{a as default};
//# sourceMappingURL=hyperleaflet.modern.mjs.map
