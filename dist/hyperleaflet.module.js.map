{"version":3,"file":"hyperleaflet.module.js","sources":["../src/constants.js","../src/hyperleaflet.js"],"sourcesContent":["import L from 'leaflet';\r\n\r\nconst TILE_LAYERS = {\r\n  OpenStreetMap: L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  }),\r\n  EsriWorldImagery: L.tileLayer(\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n    {\r\n      attribution:\r\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n    },\r\n  ),\r\n};\r\n\r\nexport default TILE_LAYERS;\r\n","import L from 'leaflet';\nimport { defineExtension } from 'htmx.org';\nimport TILE_LAYERS from './constants';\n\nconst hyperleaflet = (function hyperleaflet() {\n  if (typeof L === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error('Hyperleaf can not access Leaflet');\n    return undefined;\n  }\n\n  const mapDiv = document.querySelector('#map');\n  const tileLayerDivs = mapDiv.querySelectorAll('[data-tile]');\n\n  const initalMapAttributes = {\n    center: [0, 0],\n    zoom: 1,\n    tile: TILE_LAYERS.OpenStreetMap,\n  };\n\n  const { dataset } = mapDiv;\n\n  const center = dataset?.center.split(',') || initalMapAttributes.center.center;\n  const zoom = dataset?.zoom || initalMapAttributes.zoom;\n  let { tile } = initalMapAttributes;\n\n  const tiles = {};\n\n  tileLayerDivs.forEach((tileLayer) => {\n    const { dataset: tileLayerDataset } = tileLayer;\n    const tileLayerName = tileLayerDataset.tile;\n    if (tileLayerName in TILE_LAYERS) {\n      const currentTile = TILE_LAYERS[tileLayerName];\n      currentTile.options.minZoom = tileLayerDataset.minZoom;\n      currentTile.options.maxZoom = tileLayerDataset.maxZoom;\n      tiles[tileLayerName] = currentTile;\n      if ('default' in tileLayerDataset) {\n        tile = currentTile;\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(`${tileLayerName} is not in: \\n${Object.keys(TILE_LAYERS).join('\\n')}`);\n    }\n  });\n\n  const map = L.map(mapDiv).setView(center, zoom);\n\n  if (Object.keys(tiles).length) {\n    L.control.layers(tiles).addTo(map);\n  }\n  tile.addTo(map);\n\n  const leafletObjects = {};\n\n  const proxy = new Proxy(leafletObjects, {\n    set(target, property, value) {\n      const point = L.marker(value.split(',')).addTo(map);\n      target[property] = point;\n      return true;\n    },\n    deleteProperty(target, property) {\n      target[property].remove();\n      delete target[property];\n      return true;\n    },\n  });\n\n  const getDifference = (original, current) => {\n    const originalList = Object.keys(original);\n    const newsList = Object.keys(current);\n\n    const adds = newsList.filter((item) => !originalList.includes(item));\n    const deletes = originalList.filter((item) => !newsList.includes(item));\n\n    return { adds, deletes };\n  };\n\n  const processHyperleafTable = (target) => {\n    const rowNodeList = target.querySelectorAll('[data-id]');\n    const rowList = Array.from(rowNodeList);\n    const currentObjects = rowList.reduce((curr, next) => ({ ...curr, [next.dataset.id]: next.dataset.latlng }), {});\n    const difference = getDifference(leafletObjects, currentObjects);\n\n    difference.adds.forEach((row) => {\n      proxy[row] = currentObjects[row];\n    });\n    difference.deletes.forEach((row) => {\n      delete proxy[row];\n    });\n  };\n\n  defineExtension('leaflet', {\n    onEvent: (name) => {\n      if (['htmx:afterProcessNode', 'htmx:afterOnLoad'].includes(name)) {\n        const hyperleafTable = document.querySelector('[hx-ext=leaflet]');\n        processHyperleafTable(hyperleafTable);\n      }\n    },\n  });\n\n  return { map };\n})();\n\nexport default hyperleaflet;\n"],"names":["TILE_LAYERS","OpenStreetMap","L","tileLayer","attribution","EsriWorldImagery","hyperleaflet","mapDiv","document","querySelector","tileLayerDivs","querySelectorAll","initalMapAttributes","center","zoom","tile","dataset","split","tiles","forEach","tileLayerDataset","tileLayerName","currentTile","options","minZoom","maxZoom","console","warn","Object","keys","join","map","setView","length","control","layers","addTo","leafletObjects","proxy","Proxy","set","target","property","value","point","marker","deleteProperty","remove","defineExtension","onEvent","name","current","originalList","rowNodeList","currentObjects","includes","Array","from","reduce","curr","next","id","latlng","_extends2","adds","filter","item","deletes","newsList","row","difference","error"],"mappings":"sSAEA,IAAMA,EAAc,CAClBC,cAAeC,EAAEC,UAAU,iDAAkD,CAC3EC,YAAa,8EAEfC,iBAAkBH,EAAEC,UAClB,gGACA,CACEC,YACE,mJCNUE,EAAI,WACpB,QAAiB,MAAjB,CAMA,IAAMC,EAASC,SAASC,cAAc,QAChCC,EAAgBH,EAAOI,iBAAiB,eAErBC,EAAG,CAC1BC,OAAQ,CAAC,EAAG,GACZC,KAAM,EACNC,KAAMf,EAAYC,eAGZe,EAAYT,EAAZS,QAEFH,GAASG,MAAAA,OAAAA,EAAAA,EAASH,OAAOI,MAAM,OAAQL,EAAoBC,OAAOA,OAC9DC,GAAGE,MAAAA,OAAAA,EAAAA,EAASF,OAAQF,EAAoBE,KACxCC,EAAKH,EAATG,KAEKG,EAAG,CAAA,EAEdR,EAAcS,QAAQ,SAAChB,GACrB,IAAiBiB,EAAqBjB,EAA9Ba,QACFK,EAAgBD,EAAiBL,KACvC,GAAIM,KAAiBrB,EAAa,CAChC,IAAiBsB,EAAGtB,EAAYqB,GAChCC,EAAYC,QAAQC,QAAUJ,EAAiBI,QAC/CF,EAAYC,QAAQE,QAAUL,EAAiBK,QAC/CP,EAAMG,GAAiBC,EACnB,YAAaF,IACfL,EAAOO,EAEX,MAEEI,QAAQC,KAAQN,EAAa,iBAAiBO,OAAOC,KAAK7B,GAAa8B,KAAK,MAEhF,GAEA,IAASC,EAAG7B,EAAE6B,IAAIxB,GAAQyB,QAAQnB,EAAQC,GAEtCc,OAAOC,KAAKX,GAAOe,QACrB/B,EAAEgC,QAAQC,OAAOjB,GAAOkB,MAAML,GAEhChB,EAAKqB,MAAML,GAEX,IAAMM,EAAiB,CAAA,EAEZC,EAAG,IAASC,MAACF,EAAgB,CACtCG,IAAG,SAACC,EAAQC,EAAUC,GACpB,IAAMC,EAAQ1C,EAAE2C,OAAOF,EAAM1B,MAAM,MAAMmB,MAAML,GAE/C,OADAU,EAAOC,GAAYE,IAErB,EACAE,eAAc,SAACL,EAAQC,GAGrB,OAFAD,EAAOC,GAAUK,kBACHL,IAEhB,CAAA,IAoCF,OATAM,EAAgB,UAAW,CACzBC,QAAS,SAACC,GAEN,IA3B2BC,EACzBC,IAUWC,EAEXC,IAaA,CAAC,wBAAyB,oBAAoBC,SAASL,KAf5CG,EAgBU7C,SAASC,cAAc,oBAhBvBE,iBAAiB,aAXbwC,EAazBG,EADUE,MAAMC,KAAKJ,GACIK,OAAO,SAACC,EAAMC,GAAeD,IAAAA,EAAAA,OAAAA,EAAAA,CAAAA,EAAAA,UAAOC,EAAK5C,QAAQ6C,IAAKD,EAAK5C,QAAQ8C,OAASC,GAAA,EAAE,CAAE,GAZzGX,EAAexB,OAAOC,KAaKQ,MAP1B,CAAE2B,QALQpC,OAAOC,KAAKsB,IAEPc,OAAO,SAACC,GAAI,OAAMd,EAAaG,SAASW,EAAK,GAGpDC,QAFCf,EAAaa,OAAO,SAACC,GAAI,OAAME,EAASb,SAASW,EAAK,KAW3DF,KAAK7C,QAAQ,SAACkD,GACvB/B,EAAM+B,GAAOf,EAAee,EAC9B,GACAC,EAAWH,QAAQhD,QAAQ,SAACkD,UACd/B,EAAC+B,EACf,GASA,IAGK,CAAEtC,IAAAA,EA3FT,CAFEL,QAAQ6C,MAAM,mCA8FlB,CAjGsB"}