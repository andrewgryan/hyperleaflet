{"version":3,"file":"hyperleaflet.module.js","sources":["../src/events.js","../src/leaflet-geometry.js","../src/hyperleaflet-geometry-handler.js","../src/constants.js","../src/map-utils.js","../src/geometry-debugger.js","../src/remove-geometry-attribute.js","../src/hyperleaflet.js"],"sourcesContent":["export default function setMapEvents(map) {\n  map.on('click', (e) => {\n    const event = new CustomEvent('mapclick', { detail: { point: e.latlng } });\n    window.dispatchEvent(event);\n  });\n\n  map.on('zoomend', () => {\n    const event = new CustomEvent('mapzoom', {\n      detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: map.getBounds() },\n    });\n    window.dispatchEvent(event);\n  });\n\n  map.on('move', () => {\n    const event = new CustomEvent('mapmove', {\n      detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: map.getBounds() },\n    });\n    window.dispatchEvent(event);\n  });\n\n  return map;\n}\n\nexport function setGeometryEvents(leafletObject, id) {\n  leafletObject.on('click', () => {\n    const event = new CustomEvent('pointclick', { detail: { point: leafletObject.getLatLng(), rowId: id } });\n    window.dispatchEvent(event);\n  });\n}\n","import { marker, polyline, polygon, GeoJSON } from 'leaflet';\nimport { setGeometryEvents } from './events';\n\nconst createPointGeometry = (parsedGeometry, options) => {\n  const point = marker(parsedGeometry);\n  if (options.popup) {\n    point.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    point.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(point, options.id);\n  return point;\n};\n\nconst createLineGeometry = (parsedGeometry, options) => {\n  const flippedGeometry = GeoJSON.coordsToLatLngs(parsedGeometry, 1);\n  const line = polyline(flippedGeometry);\n  if (options.popup) {\n    line.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    line.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(line, options.id);\n  return line;\n};\n\nconst createPolygonGeometry = (parsedGeometry, options) => {\n  const flippedGeometry = GeoJSON.coordsToLatLngs(parsedGeometry, 1);\n  const _polygon = polygon(flippedGeometry);\n  if (options.popup) {\n    _polygon.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    _polygon.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(_polygon, options.id);\n  return _polygon;\n};\n\nconst createGeometry = (geometryType) => (parsedGeometry, options) => {\n  switch (geometryType) {\n    case 'Point':\n      return createPointGeometry(parsedGeometry, options);\n    case 'LineString':\n      return createLineGeometry(parsedGeometry, options);\n    case 'Polygon':\n      return createPolygonGeometry(parsedGeometry, options);\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n};\n\nexport default function createLeafletObject(row) {\n  const { geometry, popup, tooltip, geometryType, id } = row;\n  const parsedGeometry = JSON.parse(geometry);\n\n  const createGeometryFn = createGeometry(geometryType);\n  return createGeometryFn(parsedGeometry, { popup, tooltip, id });\n}\n","import createLeafletObject from './leaflet-geometry';\n\nconst leafletObjectMap = new Map();\n\nfunction addNodeToHyperleaflet(node) {\n  const { dataset } = node;\n  const rowId = dataset.id;\n\n  if (rowId in leafletObjectMap) {\n    // eslint-disable-next-line no-console\n    console.error(`%c${rowId}`, 'color:red', 'already exists', node);\n    return [];\n  }\n\n  const leafletObject = createLeafletObject({ ...dataset });\n  leafletObjectMap.set(rowId, leafletObject);\n\n  return [leafletObject];\n}\n\nfunction deleteNodeFromHyperleaflet(node) {\n  const rowId = node.dataset.id;\n  const leafletObject = leafletObjectMap.get(rowId);\n  leafletObjectMap.delete(rowId);\n  return [leafletObject];\n}\n\nexport default function hyperleafletGeometryHandler(map, { addCallback = () => {}, removeCallback = () => {} }) {\n  const addNoteListToHyperleaflet = (nodes) => {\n    nodes.forEach((node) => {\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\n        const [leafletObject] = addNodeToHyperleaflet(node);\n        leafletObject.addTo(map);\n        addCallback(node);\n      }\n    });\n  };\n\n  function removeNodeListToHyperleaflet(nodes) {\n    nodes.forEach((node) => {\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\n        const [leafletObject] = deleteNodeFromHyperleaflet(node);\n        leafletObject.remove();\n        removeCallback(node);\n      }\n    });\n  }\n\n  return { addNoteListToHyperleaflet, removeNodeListToHyperleaflet };\n}\n","import { tileLayer } from 'leaflet';\n\nconst TILE_LAYERS = {\n  OpenStreetMap: tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n  }),\n  EsriWorldImagery: tileLayer(\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    {\n      attribution:\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n    },\n  ),\n};\n\nexport default TILE_LAYERS;\n","import { map, control } from 'leaflet';\nimport TILE_LAYERS from './constants';\nimport setMapEvents from './events';\n\nexport function getDefaultHyperleafletTile(tileLayerElementList) {\n  const defaultTileLayerElement = tileLayerElementList.find((t) => 'defaultTile' in t.dataset);\n  if (defaultTileLayerElement) {\n    return TILE_LAYERS[defaultTileLayerElement.dataset.tile];\n  }\n  if (tileLayerElementList.length) {\n    return TILE_LAYERS[tileLayerElementList[0].dataset.tile];\n  }\n  return TILE_LAYERS.OpenStreetMap;\n}\n\nexport function createHyperleafletTiles(tileLayerElementNodeList) {\n  const tileLayerElementList = Array.from(tileLayerElementNodeList);\n  const hyperleafletTiles = tileLayerElementList\n    .map((tileLayerElement) => {\n      const { tile, minZoom, maxZoom } = tileLayerElement.dataset;\n\n      const currentTile = TILE_LAYERS[tile];\n      if (!currentTile) {\n        // eslint-disable-next-line no-console\n        console.warn(`${tile} is not in: \\n${Object.keys(TILE_LAYERS).join('\\n')}`);\n        return null;\n      }\n      currentTile.options.minZoom = minZoom;\n      currentTile.options.maxZoom = maxZoom;\n      currentTile.name = tile;\n      return { tile: currentTile };\n    })\n    .filter(Boolean);\n  const defaultHyperleafletTile = getDefaultHyperleafletTile(tileLayerElementList);\n  return {\n    defaultHyperleafletTile,\n    tileController: hyperleafletTiles.length\n      ? control.layers(Object.fromEntries(hyperleafletTiles.map((t) => [t.tile.name, t.tile])))\n      : null,\n  };\n}\n\nexport default function createHyperleafletMap(mapElement) {\n  const { center, zoom } = mapElement.dataset;\n\n  const mapView = {\n    center: center?.split(','),\n    zoom: zoom || 1,\n  };\n  const map_ = map(mapElement).setView(mapView.center, mapView.zoom);\n  return setMapEvents(map_);\n}\n","const debugMode = document.createElement('script');\ndebugMode.type = 'application/json';\ndebugMode.setAttribute('data-testid', 'debug');\ndebugMode.innerText = '{}';\ndocument.body.appendChild(debugMode);\n\nconst debugObject = JSON.parse(debugMode.text);\nexport function addToDebug(node) {\n  const { id, geometry, geometryType } = node.dataset;\n  node.removeAttribute('data-geometry');\n  debugObject[id] = { type: geometryType, coordinates: JSON.parse(geometry) };\n  debugMode.text = JSON.stringify(debugObject, null, 2);\n}\n\nexport function deleteFromDebug(node) {\n  const { id } = node.dataset;\n  delete debugObject[id];\n  debugMode.text = JSON.stringify(debugObject, null, 2);\n}\n","export default function removeGeometryAttribute(node) {\n  node.removeAttribute('data-geometry');\n}\n","import { geoJSON } from 'leaflet';\nimport hyperleafletGeometryHandler from './hyperleaflet-geometry-handler';\nimport createHyperleafletMap, { createHyperleafletTiles } from './map-utils';\nimport { addToDebug, deleteFromDebug } from './geometry-debugger';\nimport removeGeometryAttributes from './remove-geometry-attribute';\n\nconst hyperleaflet = (function hyperleaflet() {\n  // if (typeof L === 'undefined') {\n  //   // eslint-disable-next-line no-console\n  //   console.error('Hyperleaflet can not access Leaflet');\n  //   return undefined;\n  // }\n\n  const mapContainer = document.querySelector('#map');\n  const map = createHyperleafletMap(mapContainer);\n  const hyperleafletDataContainer = document.querySelector('[hyperleaflet]');\n\n  const tileLayerElementList = mapContainer.querySelectorAll('[data-tile]');\n  const { defaultHyperleafletTile, tileController } = createHyperleafletTiles(tileLayerElementList);\n\n  if (tileController) {\n    tileController.addTo(map);\n  }\n  defaultHyperleafletTile.addTo(map);\n\n  const geometryDisplayStrategy = hyperleafletDataContainer.dataset.geometryDisplay || 'object';\n\n  let callbackFunctions = {};\n  if (geometryDisplayStrategy === 'object') {\n    callbackFunctions = {\n      addCallback: addToDebug,\n      removeCallback: deleteFromDebug,\n    };\n  } else if (geometryDisplayStrategy === 'remove') {\n    callbackFunctions = {\n      addCallback: removeGeometryAttributes,\n      removeCallback: () => {},\n    };\n  }\n\n  const { addNoteListToHyperleaflet, removeNodeListToHyperleaflet } = hyperleafletGeometryHandler(\n    map,\n    callbackFunctions,\n  );\n\n  map.whenReady(() => {\n    const nodes = hyperleafletDataContainer.querySelectorAll('[data-id]');\n    addNoteListToHyperleaflet(nodes);\n  });\n\n  function callback(mutations) {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        addNoteListToHyperleaflet(mutation.addedNodes);\n        removeNodeListToHyperleaflet(mutation.removedNodes);\n      }\n    });\n  }\n\n  const observer = new MutationObserver(callback);\n\n  observer.observe(hyperleafletDataContainer, {\n    childList: true, // observe direct children\n    subtree: true, // and lower descendants too\n    attributeFilter: ['data-id'],\n  });\n\n  const addGeoJsonToMap = (geoJson) => {\n    geoJSON(geoJson).addTo(map);\n  };\n\n  return { map, addGeoJsonToMap };\n})();\n\nexport default hyperleaflet;\n"],"names":["setMapEvents","map","on","e","event","CustomEvent","detail","point","latlng","window","dispatchEvent","zoom","getZoom","center","getCenter","bbox","getBounds","setGeometryEvents","leafletObject","id","getLatLng","rowId","createPointGeometry","parsedGeometry","options","marker","popup","bindPopup","tooltip","bindTooltip","createLineGeometry","flippedGeometry","GeoJSON","coordsToLatLngs","line","polyline","createPolygonGeometry","_polygon","polygon","createGeometry","geometryType","console","warn","createLeafletObject","row","geometry","JSON","parse","createGeometryFn","leafletObjectMap","Map","addNodeToHyperleaflet","node","dataset","error","set","deleteNodeFromHyperleaflet","get","hyperleafletGeometryHandler","addCallback","removeCallback","addNoteListToHyperleaflet","nodes","forEach","nodeType","matches","addTo","removeNodeListToHyperleaflet","remove","TILE_LAYERS","OpenStreetMap","tileLayer","attribution","EsriWorldImagery","getDefaultHyperleafletTile","tileLayerElementList","defaultTileLayerElement","find","t","tile","length","createHyperleafletTiles","tileLayerElementNodeList","Array","from","hyperleafletTiles","tileLayerElement","minZoom","maxZoom","currentTile","Object","keys","join","name","filter","Boolean","defaultHyperleafletTile","tileController","control","layers","fromEntries","createHyperleafletMap","mapElement","mapView","split","map_","setView","debugMode","document","createElement","type","setAttribute","innerText","body","appendChild","debugObject","text","addToDebug","removeAttribute","coordinates","stringify","deleteFromDebug","removeGeometryAttribute","hyperleaflet","mapContainer","querySelector","hyperleafletDataContainer","querySelectorAll","geometryDisplayStrategy","geometryDisplay","callbackFunctions","removeGeometryAttributes","whenReady","callback","mutations","mutation","addedNodes","removedNodes","observer","MutationObserver","observe","childList","subtree","attributeFilter","addGeoJsonToMap","geoJson","geoJSON"],"mappings":"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"}