{"version":3,"file":"hyperleaflet.module.js","sources":["../src/Map/tiles.js","../src/Map/events.js","../src/Map/util.js","../src/Map/map.js","../src/Map/index.js","../src/Geometry/geometry-debugger.js","../src/Geometry/utils.js","../src/Geometry/events.js","../src/Geometry/leaflet-geometry.js","../src/Geometry/hyperleaflet-geometry-handler.js","../src/Geometry/index.js","../src/hyperleaflet.js"],"sourcesContent":["import { tileLayer } from 'leaflet';\n\nconst tileLayers = {\n  OpenStreetMap: tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n  }),\n  EsriWorldImagery: tileLayer(\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    {\n      attribution:\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n    },\n  ),\n};\n\nexport function addTileLayer(newTileLayer) {\n  if (tileLayers[newTileLayer.name]) {\n    console.warn(`Tile layer ${newTileLayer.name} already exists. Skipping.`);\n    return;\n  }\n  tileLayers[newTileLayer.name] = newTileLayer.tile;\n}\n\nexport default tileLayers;\n","export default function setMapEvents(map) {\n  map.on('click', (e) => {\n    const event = new CustomEvent('mapclick', { detail: { point: e.latlng } });\n    window.dispatchEvent(event);\n  });\n\n  map.on('zoomend', () => {\n    const event = new CustomEvent('mapzoom', {\n      detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: map.getBounds() },\n    });\n    window.dispatchEvent(event);\n  });\n\n  map.on('move', () => {\n    const event = new CustomEvent('mapmove', {\n      detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: map.getBounds() },\n    });\n    window.dispatchEvent(event);\n  });\n\n  return map;\n}\n","import { control, TileLayer } from 'leaflet';\nimport tileLayers, { addTileLayer } from './tiles';\n\nexport function createCustomTileLayer(url, { minZoom, maxZoom, tms } = {}) {\n  return new TileLayer(url, { minZoom: minZoom || 0, maxZoom: maxZoom || 18, tms: !!tms });\n}\n\nexport function createTileController(tiles) {\n  return tiles.length ? control.layers(Object.fromEntries(tiles.map(({ name, tile }) => [name, tile]))) : null;\n}\n\nexport function parseTileLayerElement(tileLayerElement) {\n  const { tile, tileUrl, tms, minZoom, maxZoom } = tileLayerElement.dataset;\n  if (tileUrl) {\n    const newTile = createCustomTileLayer(tileUrl, { minZoom, maxZoom, tms: tms === 'true' });\n    addTileLayer({ name: tile, tile: newTile });\n  }\n  const currentTile = tileLayers[tile];\n  if (!currentTile) {\n    console.warn(`${tile} is not in: \\n${Object.keys(tileLayers).join('\\n')}`);\n    return null;\n  }\n  currentTile.options.minZoom = minZoom;\n  currentTile.options.maxZoom = maxZoom;\n  return { tile: currentTile, name: tile };\n}\n","import { map } from 'leaflet';\nimport TILE_LAYERS from './tiles';\nimport setMapEvents from './events';\nimport { createTileController, parseTileLayerElement } from './util';\n\nexport function getDefaultHyperleafletTile(tileLayerElementList) {\n  const defaultTileLayerElement = tileLayerElementList.find((t) => 'defaultTile' in t.dataset);\n  if (defaultTileLayerElement && defaultTileLayerElement.dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[defaultTileLayerElement.dataset.tile];\n  }\n  if (tileLayerElementList.length && tileLayerElementList[0].dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[tileLayerElementList[0].dataset.tile];\n  }\n  return TILE_LAYERS.OpenStreetMap;\n}\n\nexport function createHyperleafletTiles(tileLayerElementNodeList) {\n  const tileLayerElementList = Array.from(tileLayerElementNodeList);\n  const hyperleafletTiles = tileLayerElementList.map(parseTileLayerElement).filter(Boolean);\n  const defaultHyperleafletTile = getDefaultHyperleafletTile(tileLayerElementList);\n  const tileController = createTileController(hyperleafletTiles);\n  return {\n    defaultHyperleafletTile,\n    tileController,\n  };\n}\n\nexport default function createHyperleafletMap(mapElement) {\n  const { center, zoom, minZoom, maxZoom } = mapElement.dataset;\n\n  const mapView = {\n    center: center?.split(',') ?? [0, 0],\n    zoom: zoom || 1,\n  };\n  const leafletMap = map(mapElement, {\n    center: mapView.center,\n    zoom: mapView.zoom,\n    minZoom: minZoom || 0,\n    maxZoom: maxZoom || 18,\n  });\n  return setMapEvents(leafletMap);\n}\n","import createHyperleafletMap, { createHyperleafletTiles } from './map';\n\n/**\n *Creates a map\n * @returns {L.Map}\n */\nfunction createMap() {\n  const mapContainer = document.querySelector('#map');\n  const map = createHyperleafletMap(mapContainer);\n\n  const tileLayerElementList = mapContainer.querySelectorAll('[data-tile]');\n  const { defaultHyperleafletTile, tileController } = createHyperleafletTiles(tileLayerElementList);\n\n  if (tileController) {\n    tileController.addTo(map);\n  }\n  defaultHyperleafletTile.addTo(map);\n  return map;\n}\n\nexport default createMap;\n","const debugMode = document.createElement('script');\ndebugMode.type = 'application/json';\ndebugMode.setAttribute('data-testid', 'debug');\ndebugMode.innerText = '{}';\ndocument.body.appendChild(debugMode);\n\nconst debugObject = JSON.parse(debugMode.text);\nexport function addToDebug(node) {\n  const { id, geometry, geometryType } = node.dataset;\n  node.removeAttribute('data-geometry');\n  debugObject[id] = { type: geometryType, coordinates: JSON.parse(geometry) };\n  debugMode.text = JSON.stringify(debugObject, null, 2);\n}\n\nexport function deleteFromDebug(node) {\n  const { id } = node.dataset;\n  delete debugObject[id];\n  debugMode.text = JSON.stringify(debugObject, null, 2);\n}\n","export default function utils(node) {\n  node.removeAttribute('data-geometry');\n}\n","export default function setGeometryEvents(leafletObject, id) {\n  leafletObject.on('click', () => {\n    const event = new CustomEvent('pointclick', { detail: { point: leafletObject.getLatLng(), rowId: id } });\n    window.dispatchEvent(event);\n  });\n}\n","import { marker, polyline, polygon, GeoJSON } from 'leaflet';\nimport setGeometryEvents from './events';\n\nconst createPointGeometry = (parsedGeometry, options) => {\n  const geometry = marker(parsedGeometry);\n  if (options.popup) {\n    geometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    geometry.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(geometry, options.id);\n  return geometry;\n};\n\nconst createLineGeometry = (parsedGeometry, options) => {\n  const flippedGeometry = GeoJSON.coordsToLatLngs(parsedGeometry, 1);\n  const geometry = polyline(flippedGeometry);\n  if (options.popup) {\n    geometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    geometry.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(geometry, options.id);\n  return geometry;\n};\n\nconst createPolygonGeometry = (parsedGeometry, options) => {\n  const flippedGeometry = GeoJSON.coordsToLatLngs(parsedGeometry, 1);\n  const geometry = polygon(flippedGeometry);\n  if (options.popup) {\n    geometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    geometry.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(geometry, options.id);\n  return geometry;\n};\n\nconst createGeometry = (geometryType) => (parsedGeometry, options) => {\n  switch (geometryType) {\n    case 'Point':\n      return createPointGeometry(parsedGeometry, options);\n    case 'LineString':\n      return createLineGeometry(parsedGeometry, options);\n    case 'Polygon':\n      return createPolygonGeometry(parsedGeometry, options);\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n};\n\nexport default function createLeafletObject(row) {\n  const { geometry, popup, tooltip, geometryType, id } = row;\n  const parsedGeometry = JSON.parse(geometry);\n\n  const createGeometryFn = createGeometry(geometryType);\n  return createGeometryFn(parsedGeometry, { popup, tooltip, id });\n}\n","import createLeafletObject from './leaflet-geometry';\r\n\r\nconst leafletObjectMap = new Map();\r\n\r\nfunction addNodeToHyperleaflet(node) {\r\n  const { dataset } = node;\r\n  const rowId = dataset.id;\r\n\r\n  if (rowId in leafletObjectMap) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(`%c${rowId}`, 'color:red', 'already exists', node);\r\n    return [];\r\n  }\r\n\r\n  const leafletObject = createLeafletObject({ ...dataset });\r\n  leafletObjectMap.set(rowId, leafletObject);\r\n\r\n  return [leafletObject];\r\n}\r\n\r\nfunction deleteNodeFromHyperleaflet(node) {\r\n  const rowId = node.dataset.id;\r\n  const leafletObject = leafletObjectMap.get(rowId);\r\n  leafletObjectMap.delete(rowId);\r\n  return [leafletObject];\r\n}\r\n\r\nexport default function hyperleafletGeometryHandler(map, { addCallback = () => {}, removeCallback = () => {} }) {\r\n  const addNoteListToHyperleaflet = (nodes) => {\r\n    nodes.forEach((node) => {\r\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\r\n        const [leafletObject] = addNodeToHyperleaflet(node);\r\n        leafletObject.addTo(map);\r\n        addCallback(node);\r\n      }\r\n    });\r\n  };\r\n\r\n  function removeNodeListToHyperleaflet(nodes) {\r\n    nodes.forEach((node) => {\r\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\r\n        const [leafletObject] = deleteNodeFromHyperleaflet(node);\r\n        leafletObject.remove();\r\n        removeCallback(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  return { addNoteListToHyperleaflet, removeNodeListToHyperleaflet };\r\n}\r\n","import { addToDebug, deleteFromDebug } from './geometry-debugger';\nimport removeGeometryAttributes from './utils';\nimport hyperleafletGeometryHandler from './hyperleaflet-geometry-handler';\n\n/**\n * Adds the data from the hyperleaflet container to the map.\n @param {L.Map} map\n @param map\n */\n\nfunction hyperleafletDataToMap(map) {\n  const hyperleafletDataContainer = document.querySelector('[hyperleaflet]');\n\n  if (!hyperleafletDataContainer) return;\n\n  const geometryDisplayStrategy = hyperleafletDataContainer.dataset.geometryDisplay || 'object';\n\n  let callbackFunctions = {};\n  if (geometryDisplayStrategy === 'object') {\n    callbackFunctions = {\n      addCallback: addToDebug,\n      removeCallback: deleteFromDebug,\n    };\n  } else if (geometryDisplayStrategy === 'remove') {\n    callbackFunctions = {\n      addCallback: removeGeometryAttributes,\n      removeCallback: () => {},\n    };\n  }\n\n  const { addNoteListToHyperleaflet, removeNodeListToHyperleaflet } = hyperleafletGeometryHandler(\n    map,\n    callbackFunctions,\n  );\n\n  map.whenReady(() => {\n    const nodes = hyperleafletDataContainer.querySelectorAll('[data-id]');\n    addNoteListToHyperleaflet(nodes);\n  });\n\n  function callback(mutations) {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        addNoteListToHyperleaflet(mutation.addedNodes);\n        removeNodeListToHyperleaflet(mutation.removedNodes);\n      }\n    });\n  }\n\n  const observer = new MutationObserver(callback);\n\n  observer.observe(hyperleafletDataContainer, {\n    childList: true, // observe direct children\n    subtree: true, // and lower descendants too\n    attributeFilter: ['data-id'],\n  });\n}\n\nexport default hyperleafletDataToMap;\n","import { geoJSON as leafletGeoJSON } from 'leaflet';\n\nimport createMap from './Map';\nimport hyperleafletDataToMap from './Geometry';\n\nconst hyperleaflet = (function hyperleaflet() {\n  const map = createMap();\n  hyperleafletDataToMap(map);\n\n  // TODO - move this to a separate file\n  /**\n   Adds a GeoJSON object to the map.\n   @param {Object} geoJSON - The GeoJSON object to add to the map.\n   @returns {void}\n   */\n  const addGeoJsonToMap = (geoJSON) => {\n    leafletGeoJSON(geoJSON).addTo(map);\n  };\n\n  return { map, addGeoJsonToMap };\n})();\n\nexport default hyperleaflet;\n"],"names":["tileLayers","OpenStreetMap","tileLayer","attribution","EsriWorldImagery","addTileLayer","newTileLayer","name","console","warn","tile","setMapEvents","map","on","e","event","CustomEvent","detail","point","latlng","window","dispatchEvent","zoom","getZoom","center","getCenter","bbox","getBounds","createCustomTileLayer","url","minZoom","maxZoom","tms","TileLayer","createTileController","tiles","length","control","layers","Object","fromEntries","parseTileLayerElement","tileLayerElement","dataset","tileUrl","newTile","currentTile","keys","join","options","getDefaultHyperleafletTile","tileLayerElementList","defaultTileLayerElement","find","t","TILE_LAYERS","createHyperleafletTiles","tileLayerElementNodeList","Array","from","hyperleafletTiles","filter","Boolean","defaultHyperleafletTile","tileController","createHyperleafletMap","mapElement","mapView","split","leafletMap","createMap","mapContainer","document","querySelector","querySelectorAll","addTo","debugMode","createElement","type","setAttribute","innerText","body","appendChild","debugObject","JSON","parse","text","addToDebug","node","id","geometry","geometryType","removeAttribute","coordinates","stringify","deleteFromDebug","utils","setGeometryEvents","leafletObject","getLatLng","rowId","createPointGeometry","parsedGeometry","marker","popup","bindPopup","tooltip","bindTooltip","createLineGeometry","flippedGeometry","GeoJSON","coordsToLatLngs","polyline","createPolygonGeometry","polygon","createGeometry","createLeafletObject","row","createGeometryFn","leafletObjectMap","Map","addNodeToHyperleaflet","error","set","deleteNodeFromHyperleaflet","get","hyperleafletGeometryHandler","addCallback","removeCallback","addNoteListToHyperleaflet","nodes","forEach","nodeType","matches","removeNodeListToHyperleaflet","remove","hyperleafletDataToMap","hyperleafletDataContainer","geometryDisplayStrategy","geometryDisplay","callbackFunctions","removeGeometryAttributes","whenReady","callback","mutations","mutation","addedNodes","removedNodes","observer","MutationObserver","observe","childList","subtree","attributeFilter","hyperleaflet","addGeoJsonToMap","geoJSON","leafletGeoJSON"],"mappings":"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"}