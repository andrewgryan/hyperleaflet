{"version":3,"file":"hyperleaflet.esm.js","sources":["../src/Map/tiles.js","../src/Map/events.js","../src/Map/util.js","../src/config.js","../src/Map/map.js","../src/Geometry/geometry-object-handler.js","../src/Geometry/utils.js","../src/Geometry/events.js","../src/Geometry/leaflet-geometry.js","../src/Geometry/hyperleaflet-geometry-handler.js","../src/Hyperchange/index.js","../src/Geometry/index.js","../src/Map/index.js","../src/hyperleaflet.js"],"sourcesContent":["import { tileLayer } from 'leaflet';\n\nconst tileLayers = {\n  OpenStreetMap: tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n  }),\n  EsriWorldImagery: tileLayer(\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    {\n      attribution:\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n    },\n  ),\n};\n\nexport function addTileLayer(newTileLayer) {\n  if (tileLayers[newTileLayer.name]) {\n    console.warn(`Tile layer ${newTileLayer.name} already exists. Skipping.`);\n    return;\n  }\n  tileLayers[newTileLayer.name] = newTileLayer.tile;\n}\n\nexport default tileLayers;\n","function createGenericMapEvent(map, eventName) {\n  const bounds = map.getBounds();\n  const min = bounds.getSouthWest();\n  const max = bounds.getNorthEast();\n  const bboxString = bounds.toBBoxString();\n  const event = new CustomEvent(eventName, {\n    detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: { min, max }, bboxString },\n  });\n  return event;\n}\n\nexport default function setMapEvents(map) {\n  map.on('click', (e) => {\n    const event = new CustomEvent('map:click', { detail: { point: e.latlng } });\n    window.dispatchEvent(event);\n  });\n\n  map.whenReady(() => {\n    const event = createGenericMapEvent(map, 'map:load');\n    window.dispatchEvent(event);\n  });\n\n  map.on('zoomend', () => {\n    const event = createGenericMapEvent(map, 'map:zoom');\n    window.dispatchEvent(event);\n  });\n\n  map.on('move', () => {\n    const event = createGenericMapEvent(map, 'map:move');\n    window.dispatchEvent(event);\n  });\n\n  map.on('moveend', () => {\n    const event = createGenericMapEvent(map, 'map:moveend');\n    window.dispatchEvent(event);\n  });\n\n  map.on('movestart', () => {\n    const event = createGenericMapEvent(map, 'map:movestart');\n    window.dispatchEvent(event);\n  });\n\n  return map;\n}\n\nexport function sendHyperleafletReady(map) {\n  const event = createGenericMapEvent(map, 'hyperleaflet:ready');\n  window.dispatchEvent(event);\n}\n","import { control, TileLayer } from 'leaflet';\nimport tileLayers, { addTileLayer } from './tiles';\n\nexport function createCustomTileLayer(url, { minZoom, maxZoom, tms } = {}) {\n  return new TileLayer(url, { minZoom: minZoom || 0, maxZoom: maxZoom || 18, tms: !!tms });\n}\n\nexport function createTileController(tiles) {\n  return tiles.length ? control.layers(Object.fromEntries(tiles.map(({ name, tile }) => [name, tile]))) : null;\n}\n\nexport function parseTileLayerElement(tileLayerElement) {\n  const { tile, tileUrl, tms, minZoom, maxZoom } = tileLayerElement.dataset;\n  if (tileUrl) {\n    const newTile = createCustomTileLayer(tileUrl, { minZoom, maxZoom, tms: tms === 'true' });\n    addTileLayer({ name: tile, tile: newTile });\n  }\n  const currentTile = tileLayers[tile];\n  if (!currentTile) {\n    // eslint-disable-next-line no-console\n    console.warn(`${tile} is not in: \\n${Object.keys(tileLayers).join('\\n')}`);\n    return null;\n  }\n  currentTile.options.minZoom = minZoom;\n  currentTile.options.maxZoom = maxZoom;\n  return { tile: currentTile, name: tile };\n}\n\nfunction reverseCoordinates(point) {\n  return point.reverse();\n}\n\nexport function safeParsePoint(pointJson, reverse = false) {\n  try {\n    const point = JSON.parse(pointJson);\n    return reverse ? reverseCoordinates(point) : point;\n  } catch (_) {\n    return [0, 0];\n  }\n}\n","const hyperleafletConfig = {\n  reverseOrderAll: false,\n};\nexport default hyperleafletConfig;\n","import { map } from 'leaflet';\nimport TILE_LAYERS from './tiles';\nimport setMapEvents from './events';\nimport { createTileController, parseTileLayerElement, safeParsePoint } from './util';\nimport hyperleafletConfig from '../config';\n\nexport function getDefaultHyperleafletTile(tileLayerElementList) {\n  const defaultTileLayerElement = tileLayerElementList.find((t) => 'defaultTile' in t.dataset);\n  if (defaultTileLayerElement && defaultTileLayerElement.dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[defaultTileLayerElement.dataset.tile];\n  }\n  if (tileLayerElementList.length && tileLayerElementList[0].dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[tileLayerElementList[0].dataset.tile];\n  }\n  return TILE_LAYERS.OpenStreetMap;\n}\n\nexport function createHyperleafletTiles(tileLayerElementNodeList) {\n  const tileLayerElementList = Array.from(tileLayerElementNodeList);\n  const hyperleafletTiles = tileLayerElementList.map(parseTileLayerElement).filter(Boolean);\n  const defaultHyperleafletTile = getDefaultHyperleafletTile(tileLayerElementList);\n  const tileController = createTileController(hyperleafletTiles);\n  return {\n    defaultHyperleafletTile,\n    tileController,\n  };\n}\n\nexport default function createHyperleafletMap(mapElement) {\n  const { center, zoom, minZoom, maxZoom } = mapElement.dataset;\n  const { reverseOrderAll } = hyperleafletConfig;\n  const mapView = {\n    center: safeParsePoint(center, reverseOrderAll),\n    zoom: zoom || 1,\n  };\n  const leafletMap = map(mapElement, {\n    center: mapView.center,\n    zoom: mapView.zoom,\n    minZoom: minZoom || 0,\n    maxZoom: maxZoom || 18,\n  });\n  return setMapEvents(leafletMap);\n}\n","export default function geometryObjectHandler(){\n  const geometryObjectElement = document.createElement('script');\n  geometryObjectElement.type = 'application/json';\n  geometryObjectElement.setAttribute('data-testid', 'json');\n  geometryObjectElement.innerText = '{}';\n  document.body.appendChild(geometryObjectElement);\n  \n  const geometryObject = JSON.parse(geometryObjectElement.text);\n  const addToGeometryObject = (node) =>  {\n    const { id, geometry, geometryType } = node.dataset;\n    node.removeAttribute('data-geometry');\n    geometryObject[id] = { type: geometryType, coordinates: JSON.parse(geometry) };\n    geometryObjectElement.text = JSON.stringify(geometryObject, null, 2);\n  }\n  const removeFromGeometryObject = (node) => {\n    const { id } = node.dataset;\n    delete geometryObject[id];\n    geometryObjectElement.text = JSON.stringify(geometryObject, null, 2);\n  }\n  return {addToGeometryObject, removeFromGeometryObject}\n}\n","export default function utils(node) {\n  node.removeAttribute('data-geometry');\n}\n","export function setPointEvents(leafletObject, id) {\n  leafletObject.on('click', (e) => {\n    const event = new CustomEvent('geometry:click', {\n      detail: { clickedPoint: e.latlng, geometry: leafletObject.getLatLng(), rowId: id }\n    });\n    window.dispatchEvent(event);\n  });\n}\n\nexport function setPolyGeometryEvents(leafletObject, id) {\n  leafletObject.on('click', (e) => {\n    const event = new CustomEvent('geometry:click', { detail: { clickedPoint: e.latlng, geometry: leafletObject.getLatLngs(), rowId: id } });\n    window.dispatchEvent(event);\n  });\n}\n","import { GeoJSON, icon, marker, polygon, polyline } from 'leaflet';\nimport { setPointEvents, setPolyGeometryEvents } from './events';\nimport hyperleafletConfig from '../config';\n\nconst createPointGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder, icon: iconSettings } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? [...parsedGeometry].reverse() : parsedGeometry;\n  let leafletGeometry;\n  if (options.icon) {\n    leafletGeometry = marker(geometry, { icon: icon(JSON.parse(options.icon)) });\n  } else {\n    leafletGeometry = marker(geometry);\n  }\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPointEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nfunction changePointGeometry(leafletObject, parsedGeometry, options) {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? [...parsedGeometry].reverse() : parsedGeometry;\n  leafletObject.setLatLng(geometry);\n  return leafletObject;\n}\n\nconst createLineGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder, options: polylineOptions } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 0) : parsedGeometry;\n  const leafletGeometry = polyline(geometry, polylineOptions);\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPolyGeometryEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nfunction changeLineGeometry(leafletObject, parsedGeometry, options) {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 0) : parsedGeometry;\n  leafletObject.setLatLngs(geometry);\n  return leafletObject;\n}\n\nconst createPolygonGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder, options: polylineOptions } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 1) : parsedGeometry;\n  const leafletGeometry = polygon(geometry, polylineOptions);\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPolyGeometryEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nfunction changePolygonGeometry(leafletObject, parsedGeometry, options) {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 1) : parsedGeometry;\n  leafletObject.setLatLngs(geometry);\n  return leafletObject;\n}\n\nconst createGeometry = (geometryType) => (parsedGeometry, options) => {\n  switch (geometryType) {\n    case 'Point':\n      return createPointGeometry(parsedGeometry, options);\n    case 'LineString':\n      return createLineGeometry(parsedGeometry, options);\n    case 'Polygon':\n      return createPolygonGeometry(parsedGeometry, options);\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n};\n\nfunction changeGeometry(leafletObject, change) {\n  const { geometryType } = change.dataset;\n  const parsedGeometry = JSON.parse(change.to);\n  const { reverseOrderAll } = hyperleafletConfig;\n\n  switch (geometryType) {\n    case 'Point':\n      return changePointGeometry(leafletObject, parsedGeometry, {\n        ...change.dataset,\n        reverseOrderAll,\n      });\n    case 'LineString':\n      return changeLineGeometry(leafletObject, parsedGeometry, {\n        ...change.dataset,\n        reverseOrderAll,\n      });\n    case 'Polygon':\n      return changePolygonGeometry(leafletObject, parsedGeometry, {\n        ...change.dataset,\n        reverseOrderAll,\n      });\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n}\n\nfunction changeOptions(leafletObject, change) {\n  const { to: options } = change;\n  return leafletObject.setStyle(JSON.parse(options));\n}\n\nexport function createLeafletObject(dataset) {\n  // Image overlay\n  if ('l' in dataset) {\n    return createL(dataset);\n  }\n\n  // Geometry based L objects\n  const { geometry, popup, tooltip, geometryType, id, reverseOrder, options = '{}', icon } = dataset;\n  const parsedGeometry = JSON.parse(geometry);\n  const parsedOptions = JSON.parse(options);\n  const { reverseOrderAll } = hyperleafletConfig;\n  const createGeometryFn = createGeometry(geometryType);\n  return createGeometryFn(parsedGeometry, {\n    popup,\n    tooltip,\n    id,\n    reverseOrderAll,\n    reverseOrder,\n    options: parsedOptions,\n    icon,\n  });\n}\n\n/**\n * Create a L.* leaflet object from HTML data-* attributes\n */\nfunction createL(dataset) {\n  if (dataset.l.toLowerCase() === 'imageoverlay') {\n    [\n      ['imageUrl', 'data-image-url'],\n      ['imageBounds', 'data-image-bounds'],\n    ].forEach(([attr, htmlAttr]) => {\n      if (typeof dataset[attr] === 'undefined') {\n        throw new Error(`Required attribute ${htmlAttr} for image overlay not specified in dataset.`);\n      }\n    });\n    let options = undefined;\n    if (typeof dataset.imageOpacity !== 'undefined') {\n      options = {\n        opacity: Number(dataset.imageOpacity),\n      };\n    }\n    return L.imageOverlay(dataset.imageUrl, JSON.parse(dataset.imageBounds), options);\n  } else {\n    throw new Error(`data-l ${dataset.l} not supported`);\n  }\n}\n\n/**\n * Change L.* leaflet object attributes\n */\nfunction changeL(leafletObject, change) {\n  switch (change.attribute.toLowerCase()) {\n    case 'data-image-bounds':\n      return leafletObject.setBounds(JSON.parse(change.to));\n    case 'data-image-url':\n      return leafletObject.setUrl(change.to);\n    case 'data-image-opacity':\n      return leafletObject.setOpacity(Number(change.to));\n    default:\n      throw new Error(`change to ${change.attribute} not supported`);\n  }\n}\n\nexport function changeLeafletObject(leafletObject, change) {\n  switch (change.attribute.toLowerCase()) {\n    case 'data-geometry': {\n      return changeGeometry(leafletObject, change);\n    }\n    case 'data-options': {\n      return changeOptions(leafletObject, change);\n    }\n    case 'data-l':\n    case 'data-image-url':\n    case 'data-image-bounds':\n    case 'data-image-opacity':\n      return changeL(leafletObject, change);\n    default: {\n      throw new Error(`Unsupported attribute ${change.attribute} in dataset for changing Leaflet object.`);\n    }\n  }\n}\n","import { createLeafletObject, changeLeafletObject } from './leaflet-geometry';\n\nfunction addNodeToHyperleaflet(node, map) {\n  const { dataset } = node;\n  const rowId = dataset.id;\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n\n  if (leafletLayers.find((layer) => layer.hlID === rowId)) {\n    // eslint-disable-next-line no-console\n    console.error(`%c${rowId}`, 'color:red', 'already exists', node);\n    return;\n  }\n\n  const leafletObject = createLeafletObject({ ...dataset });\n  leafletObject.hlID = rowId;\n  leafletObject.addTo(map);\n}\n\nfunction deleteNodeFromHyperleaflet(node, map) {\n  const rowId = node.dataset.id;\n\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n  const leafletObject = leafletLayers.find((layer) => layer.hlID === rowId);\n  leafletObject?.remove();\n}\n\nfunction changeNodeInHyperleaflet(change, map) {\n  const rowId = change['data-id'];\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n  const leafletObject = leafletLayers.find((layer) => layer.hlID === rowId);\n  changeLeafletObject(leafletObject, change);\n}\n\nexport default function hyperleafletGeometryHandler(map, { addCallback = () => {}, removeCallback = () => {} }) {\n  const addNoteListToHyperleaflet = (nodes) => {\n    nodes.forEach((node) => {\n      addNodeToHyperleaflet(node, map);\n      addCallback(node);\n    });\n  };\n\n  function removeNodeListFromHyperleaflet(nodes) {\n    nodes.forEach((node) => {\n      deleteNodeFromHyperleaflet(node, map);\n      removeCallback(node);\n    });\n  }\n\n  function changeNodesInHyperleaflet(changes) {\n    // changes is an array of changes and a dataset\n    changes.forEach((change) => {\n      // NOTE: Some changes have shape { node, changes }, but these seem to be related to add/remove\n      //       lifecycle events.\n      const { dataset, ...partialChanges } = change;\n      if (typeof dataset !== 'undefined') {\n        // Handle { dataset, { i: change } } format\n        Object.values(partialChanges).forEach((partialChange) => {\n          changeNodeInHyperleaflet({ ...partialChange, dataset }, map);\n        });\n      }\n    });\n  }\n\n  return { addNoteListToHyperleaflet, removeNodeListFromHyperleaflet, changeNodesInHyperleaflet };\n}\n","/* eslint-disable object-shorthand */\nconst hyperChangeDetection = {\n  events: {},\n  /**\n   * @param {string} targetSelector\n   * @param {string} uniqueAttribute\n   * @param {string[]} attributeFilter\n   */\n  observe: function ({ targetSelector, uniqueAttribute, attributeFilter }) {\n    if (this.events[targetSelector]) {\n      throw new Error(\"Can't observer twice\");\n    }\n    observeChangesInTarget(targetSelector, uniqueAttribute, attributeFilter);\n    this.events[targetSelector] = {};\n  },\n\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {(nodes: Node[] | *)=>void} secondFunction\n   */\n  subscribe: function (targetSelector, evName, secondFunction) {\n    this.events[targetSelector][evName] = this.events[targetSelector][evName] || [];\n    this.events[targetSelector][evName].push(secondFunction);\n  },\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {*} fn\n   * */\n  unsubscribe: function (targetSelector, evName, fn) {\n    if (this.events[targetSelector][evName]) {\n      this.events[targetSelector][evName] = this.events[targetSelector][evName].filter((f) => f !== fn);\n    }\n  },\n\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {*} data\n   */\n  publish: function (targetSelector, evName, data) {\n    if (this.events[targetSelector][evName]) {\n      this.events[targetSelector][evName].forEach((f) => {\n        f(data);\n      });\n    }\n  },\n};\nwindow.pubsub = hyperChangeDetection;\n\n/**\n * @param {string} targetSelector\n * @param {string} uniqueAttribute\n * @param {string[]} attributeFilter\n */\nfunction observeChangesInTarget(targetSelector, uniqueAttribute, attributeFilter) {\n  const observer = new MutationObserver((mutationsList) => {\n    const t0 = performance.now();\n    const removedNodes = [];\n    const addedNodes = [];\n    // Iterate through the mutations\n    mutationsList.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        // Child nodes added or removed\n        removedNodes.push(...findNodesWithAttribute(mutation.removedNodes));\n        addedNodes.push(...findNodesWithAttribute(mutation.addedNodes));\n      } else if (mutation.type === 'attributes') {\n        const attribute = mutation.attributeName;\n        const attributeChange = {\n          attribute: attribute,\n          from: mutation.oldValue,\n          to: mutation.target.getAttribute(attribute),\n          [uniqueAttribute]: mutation.target.getAttribute(uniqueAttribute),\n        };\n        const changedNode = [{ node: mutation.target, changes: attributeChange }];\n        if (changedNode.length) {\n          hyperChangeDetection.publish(targetSelector, 'node_changes', changedNode);\n        }\n      }\n    });\n\n    const changedNodes = [];\n    const removedNodeMap = new Map(removedNodes.map((node) => [node.getAttribute(uniqueAttribute), node]));\n    const jointNodeSet = new Set();\n    addedNodes.forEach((addNode) => {\n      const addNodeId = addNode.getAttribute(uniqueAttribute);\n      const oldNode = removedNodeMap.get(addNodeId);\n      if (oldNode) {\n        jointNodeSet.add(addNodeId);\n      }\n      if (oldNode && !isEqualNode(oldNode, addNode, attributeFilter)) {\n        const attributeChanges = attributeFilter.reduce((changes, attribute) => {\n          const from = oldNode.getAttribute(attribute);\n          const to = addNode.getAttribute(attribute);\n\n          if (from !== to) {\n            changes.push({ attribute, from, to, [uniqueAttribute]: addNodeId });\n          }\n\n          return changes;\n        }, []);\n        changedNodes.push({ ...attributeChanges, dataset: addNode.dataset });\n      }\n    });\n\n    const reallyRemovedNodes =\n      removedNodes.filter((node) => !jointNodeSet.has(node.getAttribute(uniqueAttribute))) ?? [];\n    const reallyAddedNodes = addedNodes.filter((node) => !jointNodeSet.has(node.getAttribute(uniqueAttribute))) ?? [];\n\n    if (reallyAddedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_adds', reallyAddedNodes);\n    }\n    if (changedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_changes', changedNodes);\n    }\n    if (reallyRemovedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_removes', reallyRemovedNodes);\n    }\n    const t1 = performance.now();\n    console.log(` ${t1 - t0} milliseconds.`);\n  });\n\n  const isEqualNode = (oldNode, newNode, attributes) =>\n    attributes.every((attribute) => oldNode.getAttribute(attribute) === newNode.getAttribute(attribute));\n\n  function findNodesWithAttribute(nodes) {\n    const result = [];\n    nodes.forEach((node) => {\n      if (node.nodeType === 1) {\n        if (node.hasAttribute(uniqueAttribute)) {\n          result.push(node);\n        }\n        result.push(...findNodesWithAttribute(node?.childNodes));\n      }\n    });\n    return result;\n  }\n\n  // Configuration options for the observer\n  const config = {\n    childList: true,\n    subtree: true,\n    attributes: true,\n    attributeFilter: attributeFilter,\n    attributeOldValue: true,\n  };\n\n  const targetNode = document.querySelector(targetSelector);\n\n  observer.observe(targetNode, config);\n}\n\nexport default hyperChangeDetection;\n","import geometryObjectHandler from './geometry-object-handler';\nimport removeGeometryAttributes from './utils';\nimport hyperleafletGeometryHandler from './hyperleaflet-geometry-handler';\nimport hyperChangeDetection from '../Hyperchange/index';\n\nconst HYPERLEAFLET_DATA_SOURCE = '[data-hyperleaflet-source]';\n\nfunction hyperleafletDataToMap(map) {\n  const hyperleafletDataSource = document.querySelector(HYPERLEAFLET_DATA_SOURCE);\n\n  if (!hyperleafletDataSource) return;\n\n  const geometryDisplay = hyperleafletDataSource.dataset.geometryDisplay || 'none';\n\n  let callbackFunctions = {};\n  if (geometryDisplay === 'json') {\n    const { addToGeometryObject, removeFromGeometryObject } = geometryObjectHandler();\n    callbackFunctions = {\n      addCallback: addToGeometryObject,\n      removeCallback: removeFromGeometryObject,\n    };\n  } else if (geometryDisplay === 'remove') {\n    callbackFunctions = {\n      addCallback: removeGeometryAttributes,\n      removeCallback: () => {},\n    };\n  }\n\n  const { addNoteListToHyperleaflet, removeNodeListFromHyperleaflet, changeNodesInHyperleaflet } =\n    hyperleafletGeometryHandler(map, callbackFunctions);\n\n  map.whenReady(() => {\n    const nodes = hyperleafletDataSource.querySelectorAll('[data-id]');\n    addNoteListToHyperleaflet(nodes);\n  });\n\n  hyperChangeDetection.observe({\n    targetSelector: HYPERLEAFLET_DATA_SOURCE,\n    uniqueAttribute: 'data-id',\n    attributeFilter: [\n      'data-geometry',\n      'data-options',\n      'data-l',\n      'data-image-url',\n      'data-image-bounds',\n      'data-image-opacity',\n    ],\n  });\n\n  hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_adds', (data) => {\n    addNoteListToHyperleaflet(data);\n  });\n  hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_removes', (data) => {\n    removeNodeListFromHyperleaflet(data);\n  });\n  hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_changes', (data) => {\n    changeNodesInHyperleaflet(data);\n  });\n}\n\nexport default hyperleafletDataToMap;\n","import createHyperleafletMap, { createHyperleafletTiles } from './map';\nimport hyperleafletDataToMap from '../Geometry/index';\nimport { sendHyperleafletReady } from './events';\nimport hyperleafletConfig from '../config';\n\nfunction createMap() {\n  let initialized = false;\n  function initMap() {\n    const mapContainer = document.querySelector('#map');\n    if (mapContainer && !initialized) {\n      initialized = true;\n      const { reverseOrderAll } = mapContainer.dataset;\n      if (reverseOrderAll !== undefined) {\n        hyperleafletConfig.reverseOrderAll = true;\n      }\n\n      const map = createHyperleafletMap(mapContainer);\n\n      const tileLayerElementList = mapContainer.querySelectorAll('[data-tile]');\n      const { defaultHyperleafletTile, tileController } = createHyperleafletTiles(tileLayerElementList);\n\n      if (tileController) {\n        tileController.addTo(map);\n      }\n      defaultHyperleafletTile.addTo(map);\n      hyperleafletDataToMap(map);\n      window.hyperleaflet = { map };\n      sendHyperleafletReady(map);\n    }\n  }\n\n  function observeMap() {\n    const observer = new MutationObserver(() => {\n      const mapElement = document.querySelector('#map');\n      if (mapElement) {\n        initMap();\n      } else if (initialized) {\n        initialized = false;\n        delete window.hyperleaflet;\n      }\n    });\n    observer.observe(document.documentElement, { childList: true, subtree: true });\n  }\n\n  return { initMap, observeMap };\n}\nexport default createMap;\n","import createMap from './Map';\n\nconst hyperleaflet = (function hyperleaflet() {\n  const { initMap, observeMap } = createMap();\n\n  document.addEventListener('DOMContentLoaded', () => {\n    initMap();\n    observeMap();\n  });\n})();\n\nexport default hyperleaflet;\n"],"names":["tileLayers","OpenStreetMap","tileLayer","attribution","EsriWorldImagery","addTileLayer","newTileLayer","name","console","warn","tile","createGenericMapEvent","map","eventName","bounds","getBounds","min","getSouthWest","max","getNorthEast","bboxString","toBBoxString","event","CustomEvent","detail","zoom","getZoom","center","getCenter","bbox","setMapEvents","on","e","point","latlng","window","dispatchEvent","whenReady","sendHyperleafletReady","createCustomTileLayer","url","minZoom","maxZoom","tms","TileLayer","createTileController","tiles","length","control","layers","Object","fromEntries","parseTileLayerElement","tileLayerElement","dataset","tileUrl","newTile","currentTile","keys","join","options","reverseCoordinates","reverse","safeParsePoint","pointJson","JSON","parse","_","hyperleafletConfig","reverseOrderAll","getDefaultHyperleafletTile","tileLayerElementList","defaultTileLayerElement","find","t","TILE_LAYERS","createHyperleafletTiles","tileLayerElementNodeList","Array","from","hyperleafletTiles","filter","Boolean","defaultHyperleafletTile","tileController","createHyperleafletMap","mapElement","mapView","leafletMap","geometryObjectHandler","geometryObjectElement","document","createElement","type","setAttribute","innerText","body","appendChild","geometryObject","text","addToGeometryObject","node","id","geometry","geometryType","removeAttribute","coordinates","stringify","removeFromGeometryObject","utils","setPointEvents","leafletObject","clickedPoint","getLatLng","rowId","setPolyGeometryEvents","getLatLngs","createPointGeometry","parsedGeometry","reverseOrder","isLonLat","undefined","leafletGeometry","icon","marker","popup","bindPopup","tooltip","bindTooltip","changePointGeometry","setLatLng","createLineGeometry","polylineOptions","GeoJSON","coordsToLatLngs","polyline","changeLineGeometry","setLatLngs","createPolygonGeometry","polygon","changePolygonGeometry","createGeometry","changeGeometry","change","to","changeOptions","setStyle","createLeafletObject","createL","parsedOptions","createGeometryFn","l","toLowerCase","forEach","attr","htmlAttr","Error","imageOpacity","opacity","Number","L","imageOverlay","imageUrl","imageBounds","changeL","attribute","setBounds","setUrl","setOpacity","changeLeafletObject","addNodeToHyperleaflet","leafletLayers","values","_layers","layer","hlID","error","addTo","deleteNodeFromHyperleaflet","remove","changeNodeInHyperleaflet","hyperleafletGeometryHandler","addCallback","removeCallback","addNoteListToHyperleaflet","nodes","removeNodeListFromHyperleaflet","changeNodesInHyperleaflet","changes","partialChanges","partialChange","hyperChangeDetection","events","observe","targetSelector","uniqueAttribute","attributeFilter","observeChangesInTarget","subscribe","evName","secondFunction","push","unsubscribe","fn","f","publish","data","pubsub","observer","MutationObserver","mutationsList","t0","performance","now","removedNodes","addedNodes","mutation","findNodesWithAttribute","attributeName","attributeChange","oldValue","target","getAttribute","changedNode","changedNodes","removedNodeMap","Map","jointNodeSet","Set","addNode","addNodeId","oldNode","get","add","isEqualNode","attributeChanges","reduce","reallyRemovedNodes","has","reallyAddedNodes","t1","log","newNode","attributes","every","result","nodeType","hasAttribute","childNodes","config","childList","subtree","attributeOldValue","targetNode","querySelector","HYPERLEAFLET_DATA_SOURCE","hyperleafletDataToMap","hyperleafletDataSource","geometryDisplay","callbackFunctions","removeGeometryAttributes","querySelectorAll","createMap","initialized","initMap","mapContainer","hyperleaflet","observeMap","documentElement","addEventListener"],"mappings":"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"}