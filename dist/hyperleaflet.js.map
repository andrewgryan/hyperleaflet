{"version":3,"file":"hyperleaflet.js","sources":["../src/Map/tiles.js","../src/Map/events.js","../src/Map/util.js","../src/config.js","../src/Geometry/utils.js","../src/Geometry/events.js","../src/Geometry/hyperleaflet-geometry-handler.js","../src/Hyperchange/index.js","../src/Geometry/index.js","../src/hyperleaflet.js","../src/Map/index.js","../src/Map/map.js","../src/Geometry/geometry-object-handler.js","../src/Geometry/leaflet-geometry.js"],"sourcesContent":["import { tileLayer } from 'leaflet';\n\nconst tileLayers = {\n  OpenStreetMap: tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n  }),\n  EsriWorldImagery: tileLayer(\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    {\n      attribution:\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n    },\n  ),\n};\n\nexport function addTileLayer(newTileLayer) {\n  if (tileLayers[newTileLayer.name]) {\n    console.warn(`Tile layer ${newTileLayer.name} already exists. Skipping.`);\n    return;\n  }\n  tileLayers[newTileLayer.name] = newTileLayer.tile;\n}\n\nexport default tileLayers;\n","function createGenericMapEvent(map, eventName) {\n  const bounds = map.getBounds();\n  const min = bounds.getSouthWest();\n  const max = bounds.getNorthEast();\n  const bboxString = bounds.toBBoxString();\n  const event = new CustomEvent(eventName, {\n    detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: { min, max }, bboxString },\n  });\n  return event;\n}\n\nexport default function setMapEvents(map) {\n  map.on('click', (e) => {\n    const event = new CustomEvent('map:click', { detail: { point: e.latlng } });\n    window.dispatchEvent(event);\n  });\n\n  map.whenReady(() => {\n    const event = createGenericMapEvent(map, 'map:load');\n    window.dispatchEvent(event);\n  });\n\n  map.on('zoomend', () => {\n    const event = createGenericMapEvent(map, 'map:zoom');\n    window.dispatchEvent(event);\n  });\n\n  map.on('move', () => {\n    const event = createGenericMapEvent(map, 'map:move');\n    window.dispatchEvent(event);\n  });\n\n  map.on('moveend', () => {\n    const event = createGenericMapEvent(map, 'map:moveend');\n    window.dispatchEvent(event);\n  });\n\n  map.on('movestart', () => {\n    const event = createGenericMapEvent(map, 'map:movestart');\n    window.dispatchEvent(event);\n  });\n\n  return map;\n}\n\nexport function sendHyperleafletReady(map) {\n  const event = createGenericMapEvent(map, 'hyperleaflet:ready');\n  window.dispatchEvent(event);\n}\n","import { control, TileLayer } from 'leaflet';\nimport tileLayers, { addTileLayer } from './tiles';\n\nexport function createCustomTileLayer(url, { minZoom, maxZoom, tms } = {}) {\n  return new TileLayer(url, { minZoom: minZoom || 0, maxZoom: maxZoom || 18, tms: !!tms });\n}\n\nexport function createTileController(tiles) {\n  return tiles.length ? control.layers(Object.fromEntries(tiles.map(({ name, tile }) => [name, tile]))) : null;\n}\n\nexport function parseTileLayerElement(tileLayerElement) {\n  const { tile, tileUrl, tms, minZoom, maxZoom } = tileLayerElement.dataset;\n  if (tileUrl) {\n    const newTile = createCustomTileLayer(tileUrl, { minZoom, maxZoom, tms: tms === 'true' });\n    addTileLayer({ name: tile, tile: newTile });\n  }\n  const currentTile = tileLayers[tile];\n  if (!currentTile) {\n    // eslint-disable-next-line no-console\n    console.warn(`${tile} is not in: \\n${Object.keys(tileLayers).join('\\n')}`);\n    return null;\n  }\n  currentTile.options.minZoom = minZoom;\n  currentTile.options.maxZoom = maxZoom;\n  return { tile: currentTile, name: tile };\n}\n\nfunction reverseCoordinates(point) {\n  return point.reverse();\n}\n\nexport function safeParsePoint(pointJson, reverse = false) {\n  try {\n    const point = JSON.parse(pointJson);\n    return reverse ? reverseCoordinates(point) : point;\n  } catch (_) {\n    return [0, 0];\n  }\n}\n","const hyperleafletConfig = {\n  reverseOrderAll: false,\n};\nexport default hyperleafletConfig;\n","export default function utils(node) {\n  node.removeAttribute('data-geometry');\n}\n","export function setPointEvents(leafletObject, id) {\n  leafletObject.on('click', (e) => {\n    const event = new CustomEvent('geometry:click', {\n      detail: { clickedPoint: e.latlng, geometry: leafletObject.getLatLng(), rowId: id }\n    });\n    window.dispatchEvent(event);\n  });\n}\n\nexport function setPolyGeometryEvents(leafletObject, id) {\n  leafletObject.on('click', (e) => {\n    const event = new CustomEvent('geometry:click', { detail: { clickedPoint: e.latlng, geometry: leafletObject.getLatLngs(), rowId: id } });\n    window.dispatchEvent(event);\n  });\n}\n","import { createLeafletObject, changeLeafletObject } from './leaflet-geometry';\n\nfunction addNodeToHyperleaflet(node, map) {\n  const { dataset } = node;\n  const rowId = dataset.id;\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n\n  if (leafletLayers.find((layer) => layer.hlID === rowId)) {\n    // eslint-disable-next-line no-console\n    console.error(`%c${rowId}`, 'color:red', 'already exists', node);\n    return;\n  }\n\n  const leafletObject = createLeafletObject({ ...dataset });\n  leafletObject.hlID = rowId;\n  leafletObject.addTo(map);\n}\n\nfunction deleteNodeFromHyperleaflet(node, map) {\n  const rowId = node.dataset.id;\n\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n  const leafletObject = leafletLayers.find((layer) => layer.hlID === rowId);\n  leafletObject?.remove();\n}\n\nfunction changeNodeInHyperleaflet(change, map) {\n  const rowId = change['data-id'];\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n  const leafletObject = leafletLayers.find((layer) => layer.hlID === rowId);\n  changeLeafletObject(leafletObject, change);\n}\n\nexport default function hyperleafletGeometryHandler(map, { addCallback = () => {}, removeCallback = () => {} }) {\n  const addNoteListToHyperleaflet = (nodes) => {\n    nodes.forEach((node) => {\n      addNodeToHyperleaflet(node, map);\n      addCallback(node);\n    });\n  };\n\n  function removeNodeListFromHyperleaflet(nodes) {\n    nodes.forEach((node) => {\n      deleteNodeFromHyperleaflet(node, map);\n      removeCallback(node);\n    });\n  }\n\n  function changeNodesInHyperleaflet(changes) {\n    // changes is an array of changes and a dataset\n    changes.forEach((change) => {\n      // NOTE: Some changes have shape { node, changes }, but these seem to be related to add/remove\n      //       lifecycle events.\n      const { dataset, ...partialChanges } = change;\n      if (typeof dataset !== 'undefined') {\n        // Handle { dataset, { i: change } } format\n        Object.values(partialChanges).forEach((partialChange) => {\n          changeNodeInHyperleaflet({ ...partialChange, dataset }, map);\n        });\n      }\n    });\n  }\n\n  return { addNoteListToHyperleaflet, removeNodeListFromHyperleaflet, changeNodesInHyperleaflet };\n}\n","/* eslint-disable object-shorthand */\nconst hyperChangeDetection = {\n  events: {},\n  /**\n   * @param {string} targetSelector\n   * @param {string} uniqueAttribute\n   * @param {string[]} attributeFilter\n   */\n  observe: function ({ targetSelector, uniqueAttribute, attributeFilter }) {\n    if (this.events[targetSelector]) {\n      throw new Error(\"Can't observer twice\");\n    }\n    observeChangesInTarget(targetSelector, uniqueAttribute, attributeFilter);\n    this.events[targetSelector] = {};\n  },\n\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {(nodes: Node[] | *)=>void} secondFunction\n   */\n  subscribe: function (targetSelector, evName, secondFunction) {\n    this.events[targetSelector][evName] = this.events[targetSelector][evName] || [];\n    this.events[targetSelector][evName].push(secondFunction);\n  },\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {*} fn\n   * */\n  unsubscribe: function (targetSelector, evName, fn) {\n    if (this.events[targetSelector][evName]) {\n      this.events[targetSelector][evName] = this.events[targetSelector][evName].filter((f) => f !== fn);\n    }\n  },\n\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {*} data\n   */\n  publish: function (targetSelector, evName, data) {\n    if (this.events[targetSelector][evName]) {\n      this.events[targetSelector][evName].forEach((f) => {\n        f(data);\n      });\n    }\n  },\n};\nwindow.pubsub = hyperChangeDetection;\n\n/**\n * @param {string} targetSelector\n * @param {string} uniqueAttribute\n * @param {string[]} attributeFilter\n */\nfunction observeChangesInTarget(targetSelector, uniqueAttribute, attributeFilter) {\n  const observer = new MutationObserver((mutationsList) => {\n    const t0 = performance.now();\n    const removedNodes = [];\n    const addedNodes = [];\n    // Iterate through the mutations\n    mutationsList.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        // Child nodes added or removed\n        removedNodes.push(...findNodesWithAttribute(mutation.removedNodes));\n        addedNodes.push(...findNodesWithAttribute(mutation.addedNodes));\n      } else if (mutation.type === 'attributes') {\n        const attribute = mutation.attributeName;\n        const attributeChange = {\n          attribute: attribute,\n          from: mutation.oldValue,\n          to: mutation.target.getAttribute(attribute),\n          [uniqueAttribute]: mutation.target.getAttribute(uniqueAttribute),\n        };\n        const changedNode = [{ node: mutation.target, changes: attributeChange }];\n        if (changedNode.length) {\n          hyperChangeDetection.publish(targetSelector, 'node_changes', changedNode);\n        }\n      }\n    });\n\n    const changedNodes = [];\n    const removedNodeMap = new Map(removedNodes.map((node) => [node.getAttribute(uniqueAttribute), node]));\n    const jointNodeSet = new Set();\n    addedNodes.forEach((addNode) => {\n      const addNodeId = addNode.getAttribute(uniqueAttribute);\n      const oldNode = removedNodeMap.get(addNodeId);\n      if (oldNode) {\n        jointNodeSet.add(addNodeId);\n      }\n      if (oldNode && !isEqualNode(oldNode, addNode, attributeFilter)) {\n        const attributeChanges = attributeFilter.reduce((changes, attribute) => {\n          const from = oldNode.getAttribute(attribute);\n          const to = addNode.getAttribute(attribute);\n\n          if (from !== to) {\n            changes.push({ attribute, from, to, [uniqueAttribute]: addNodeId });\n          }\n\n          return changes;\n        }, []);\n        changedNodes.push({ ...attributeChanges, dataset: addNode.dataset });\n      }\n    });\n\n    const reallyRemovedNodes =\n      removedNodes.filter((node) => !jointNodeSet.has(node.getAttribute(uniqueAttribute))) ?? [];\n    const reallyAddedNodes = addedNodes.filter((node) => !jointNodeSet.has(node.getAttribute(uniqueAttribute))) ?? [];\n\n    if (reallyAddedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_adds', reallyAddedNodes);\n    }\n    if (changedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_changes', changedNodes);\n    }\n    if (reallyRemovedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_removes', reallyRemovedNodes);\n    }\n    const t1 = performance.now();\n    console.log(` ${t1 - t0} milliseconds.`);\n  });\n\n  const isEqualNode = (oldNode, newNode, attributes) =>\n    attributes.every((attribute) => oldNode.getAttribute(attribute) === newNode.getAttribute(attribute));\n\n  function findNodesWithAttribute(nodes) {\n    const result = [];\n    nodes.forEach((node) => {\n      if (node.nodeType === 1) {\n        if (node.hasAttribute(uniqueAttribute)) {\n          result.push(node);\n        }\n        result.push(...findNodesWithAttribute(node?.childNodes));\n      }\n    });\n    return result;\n  }\n\n  // Configuration options for the observer\n  const config = {\n    childList: true,\n    subtree: true,\n    attributes: true,\n    attributeFilter: attributeFilter,\n    attributeOldValue: true,\n  };\n\n  const targetNode = document.querySelector(targetSelector);\n\n  observer.observe(targetNode, config);\n}\n\nexport default hyperChangeDetection;\n","import geometryObjectHandler from './geometry-object-handler';\nimport removeGeometryAttributes from './utils';\nimport hyperleafletGeometryHandler from './hyperleaflet-geometry-handler';\nimport hyperChangeDetection from '../Hyperchange/index';\n\nconst HYPERLEAFLET_DATA_SOURCE = '[data-hyperleaflet-source]';\n\nfunction hyperleafletDataToMap(map) {\n  const hyperleafletDataSource = document.querySelector(HYPERLEAFLET_DATA_SOURCE);\n\n  if (!hyperleafletDataSource) return;\n\n  const geometryDisplay = hyperleafletDataSource.dataset.geometryDisplay || 'none';\n\n  let callbackFunctions = {};\n  if (geometryDisplay === 'json') {\n    const { addToGeometryObject, removeFromGeometryObject } = geometryObjectHandler();\n    callbackFunctions = {\n      addCallback: addToGeometryObject,\n      removeCallback: removeFromGeometryObject,\n    };\n  } else if (geometryDisplay === 'remove') {\n    callbackFunctions = {\n      addCallback: removeGeometryAttributes,\n      removeCallback: () => {},\n    };\n  }\n\n  const { addNoteListToHyperleaflet, removeNodeListFromHyperleaflet, changeNodesInHyperleaflet } =\n    hyperleafletGeometryHandler(map, callbackFunctions);\n\n  map.whenReady(() => {\n    const nodes = hyperleafletDataSource.querySelectorAll('[data-id]');\n    addNoteListToHyperleaflet(nodes);\n  });\n\n  hyperChangeDetection.observe({\n    targetSelector: HYPERLEAFLET_DATA_SOURCE,\n    uniqueAttribute: 'data-id',\n    attributeFilter: [\n      'data-geometry',\n      'data-options',\n      'data-l',\n      'data-image-url',\n      'data-image-bounds',\n      'data-image-opacity',\n    ],\n  });\n\n  hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_adds', (data) => {\n    addNoteListToHyperleaflet(data);\n  });\n  hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_removes', (data) => {\n    removeNodeListFromHyperleaflet(data);\n  });\n  hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_changes', (data) => {\n    changeNodesInHyperleaflet(data);\n  });\n}\n\nexport default hyperleafletDataToMap;\n","import createMap from './Map';\n\nconst hyperleaflet = (function hyperleaflet() {\n  const { initMap, observeMap } = createMap();\n\n  document.addEventListener('DOMContentLoaded', () => {\n    initMap();\n    observeMap();\n  });\n})();\n\nexport default hyperleaflet;\n","import createHyperleafletMap, { createHyperleafletTiles } from './map';\nimport hyperleafletDataToMap from '../Geometry/index';\nimport { sendHyperleafletReady } from './events';\nimport hyperleafletConfig from '../config';\n\nfunction createMap() {\n  let initialized = false;\n  function initMap() {\n    const mapContainer = document.querySelector('#map');\n    if (mapContainer && !initialized) {\n      initialized = true;\n      const { reverseOrderAll } = mapContainer.dataset;\n      if (reverseOrderAll !== undefined) {\n        hyperleafletConfig.reverseOrderAll = true;\n      }\n\n      const map = createHyperleafletMap(mapContainer);\n\n      const tileLayerElementList = mapContainer.querySelectorAll('[data-tile]');\n      const { defaultHyperleafletTile, tileController } = createHyperleafletTiles(tileLayerElementList);\n\n      if (tileController) {\n        tileController.addTo(map);\n      }\n      defaultHyperleafletTile.addTo(map);\n      hyperleafletDataToMap(map);\n      window.hyperleaflet = { map };\n      sendHyperleafletReady(map);\n    }\n  }\n\n  function observeMap() {\n    const observer = new MutationObserver(() => {\n      const mapElement = document.querySelector('#map');\n      if (mapElement) {\n        initMap();\n      } else if (initialized) {\n        initialized = false;\n        delete window.hyperleaflet;\n      }\n    });\n    observer.observe(document.documentElement, { childList: true, subtree: true });\n  }\n\n  return { initMap, observeMap };\n}\nexport default createMap;\n","import { map } from 'leaflet';\nimport TILE_LAYERS from './tiles';\nimport setMapEvents from './events';\nimport { createTileController, parseTileLayerElement, safeParsePoint } from './util';\nimport hyperleafletConfig from '../config';\n\nexport function getDefaultHyperleafletTile(tileLayerElementList) {\n  const defaultTileLayerElement = tileLayerElementList.find((t) => 'defaultTile' in t.dataset);\n  if (defaultTileLayerElement && defaultTileLayerElement.dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[defaultTileLayerElement.dataset.tile];\n  }\n  if (tileLayerElementList.length && tileLayerElementList[0].dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[tileLayerElementList[0].dataset.tile];\n  }\n  return TILE_LAYERS.OpenStreetMap;\n}\n\nexport function createHyperleafletTiles(tileLayerElementNodeList) {\n  const tileLayerElementList = Array.from(tileLayerElementNodeList);\n  const hyperleafletTiles = tileLayerElementList.map(parseTileLayerElement).filter(Boolean);\n  const defaultHyperleafletTile = getDefaultHyperleafletTile(tileLayerElementList);\n  const tileController = createTileController(hyperleafletTiles);\n  return {\n    defaultHyperleafletTile,\n    tileController,\n  };\n}\n\nexport default function createHyperleafletMap(mapElement) {\n  const { center, zoom, minZoom, maxZoom } = mapElement.dataset;\n  const { reverseOrderAll } = hyperleafletConfig;\n  const mapView = {\n    center: safeParsePoint(center, reverseOrderAll),\n    zoom: zoom || 1,\n  };\n  const leafletMap = map(mapElement, {\n    center: mapView.center,\n    zoom: mapView.zoom,\n    minZoom: minZoom || 0,\n    maxZoom: maxZoom || 18,\n  });\n  return setMapEvents(leafletMap);\n}\n","export default function geometryObjectHandler(){\n  const geometryObjectElement = document.createElement('script');\n  geometryObjectElement.type = 'application/json';\n  geometryObjectElement.setAttribute('data-testid', 'json');\n  geometryObjectElement.innerText = '{}';\n  document.body.appendChild(geometryObjectElement);\n  \n  const geometryObject = JSON.parse(geometryObjectElement.text);\n  const addToGeometryObject = (node) =>  {\n    const { id, geometry, geometryType } = node.dataset;\n    node.removeAttribute('data-geometry');\n    geometryObject[id] = { type: geometryType, coordinates: JSON.parse(geometry) };\n    geometryObjectElement.text = JSON.stringify(geometryObject, null, 2);\n  }\n  const removeFromGeometryObject = (node) => {\n    const { id } = node.dataset;\n    delete geometryObject[id];\n    geometryObjectElement.text = JSON.stringify(geometryObject, null, 2);\n  }\n  return {addToGeometryObject, removeFromGeometryObject}\n}\n","import { GeoJSON, icon, marker, polygon, polyline } from 'leaflet';\nimport { setPointEvents, setPolyGeometryEvents } from './events';\nimport hyperleafletConfig from '../config';\n\nconst createPointGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder, icon: iconSettings } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? [...parsedGeometry].reverse() : parsedGeometry;\n  let leafletGeometry;\n  if (options.icon) {\n    leafletGeometry = marker(geometry, { icon: icon(JSON.parse(options.icon)) });\n  } else {\n    leafletGeometry = marker(geometry);\n  }\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPointEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nfunction changePointGeometry(leafletObject, parsedGeometry, options) {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? [...parsedGeometry].reverse() : parsedGeometry;\n  leafletObject.setLatLng(geometry);\n  return leafletObject;\n}\n\nconst createLineGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder, options: polylineOptions } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 0) : parsedGeometry;\n  const leafletGeometry = polyline(geometry, polylineOptions);\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPolyGeometryEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nfunction changeLineGeometry(leafletObject, parsedGeometry, options) {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 0) : parsedGeometry;\n  leafletObject.setLatLngs(geometry);\n  return leafletObject;\n}\n\nconst createPolygonGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder, options: polylineOptions } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 1) : parsedGeometry;\n  const leafletGeometry = polygon(geometry, polylineOptions);\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPolyGeometryEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nfunction changePolygonGeometry(leafletObject, parsedGeometry, options) {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || reverseOrder !== undefined;\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 1) : parsedGeometry;\n  leafletObject.setLatLngs(geometry);\n  return leafletObject;\n}\n\nconst createGeometry = (geometryType) => (parsedGeometry, options) => {\n  switch (geometryType) {\n    case 'Point':\n      return createPointGeometry(parsedGeometry, options);\n    case 'LineString':\n      return createLineGeometry(parsedGeometry, options);\n    case 'Polygon':\n      return createPolygonGeometry(parsedGeometry, options);\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n};\n\nfunction changeGeometry(leafletObject, change) {\n  const { geometryType } = change.dataset;\n  const parsedGeometry = JSON.parse(change.to);\n  const { reverseOrderAll } = hyperleafletConfig;\n\n  switch (geometryType) {\n    case 'Point':\n      return changePointGeometry(leafletObject, parsedGeometry, {\n        ...change.dataset,\n        reverseOrderAll,\n      });\n    case 'LineString':\n      return changeLineGeometry(leafletObject, parsedGeometry, {\n        ...change.dataset,\n        reverseOrderAll,\n      });\n    case 'Polygon':\n      return changePolygonGeometry(leafletObject, parsedGeometry, {\n        ...change.dataset,\n        reverseOrderAll,\n      });\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n}\n\nfunction changeOptions(leafletObject, change) {\n  const { to: options } = change;\n  return leafletObject.setStyle(JSON.parse(options));\n}\n\nexport function createLeafletObject(dataset) {\n  // Image overlay\n  if ('l' in dataset) {\n    return createL(dataset);\n  }\n\n  // Geometry based L objects\n  const { geometry, popup, tooltip, geometryType, id, reverseOrder, options = '{}', icon } = dataset;\n  const parsedGeometry = JSON.parse(geometry);\n  const parsedOptions = JSON.parse(options);\n  const { reverseOrderAll } = hyperleafletConfig;\n  const createGeometryFn = createGeometry(geometryType);\n  return createGeometryFn(parsedGeometry, {\n    popup,\n    tooltip,\n    id,\n    reverseOrderAll,\n    reverseOrder,\n    options: parsedOptions,\n    icon,\n  });\n}\n\n/**\n * Create a L.* leaflet object from HTML data-* attributes\n */\nfunction createL(dataset) {\n  if (dataset.l.toLowerCase() === 'imageoverlay') {\n    [\n      ['imageUrl', 'data-image-url'],\n      ['imageBounds', 'data-image-bounds'],\n    ].forEach(([attr, htmlAttr]) => {\n      if (typeof dataset[attr] === 'undefined') {\n        throw new Error(`Required attribute ${htmlAttr} for image overlay not specified in dataset.`);\n      }\n    });\n    let options = undefined;\n    if (typeof dataset.imageOpacity !== 'undefined') {\n      options = {\n        opacity: Number(dataset.imageOpacity),\n      };\n    }\n    return L.imageOverlay(dataset.imageUrl, JSON.parse(dataset.imageBounds), options);\n  } else {\n    throw new Error(`data-l ${dataset.l} not supported`);\n  }\n}\n\n/**\n * Change L.* leaflet object attributes\n */\nfunction changeL(leafletObject, change) {\n  switch (change.attribute.toLowerCase()) {\n    case 'data-image-bounds':\n      return leafletObject.setBounds(JSON.parse(change.to));\n    case 'data-image-url':\n      return leafletObject.setUrl(change.to);\n    case 'data-image-opacity':\n      return leafletObject.setOpacity(Number(change.to));\n    default:\n      throw new Error(`change to ${change.attribute} not supported`);\n  }\n}\n\nexport function changeLeafletObject(leafletObject, change) {\n  switch (change.attribute.toLowerCase()) {\n    case 'data-geometry': {\n      return changeGeometry(leafletObject, change);\n    }\n    case 'data-options': {\n      return changeOptions(leafletObject, change);\n    }\n    case 'data-l':\n    case 'data-image-url':\n    case 'data-image-bounds':\n    case 'data-image-opacity':\n      return changeL(leafletObject, change);\n    default: {\n      throw new Error(`Unsupported attribute ${change.attribute} in dataset for changing Leaflet object.`);\n    }\n  }\n}\n"],"names":["tileLayers","OpenStreetMap","tileLayer","attribution","EsriWorldImagery","createGenericMapEvent","map","eventName","bounds","getBounds","min","getSouthWest","max","getNorthEast","toBBoxString","CustomEvent","detail","zoom","getZoom","center","getCenter","bbox","bboxString","parseTileLayerElement","tileLayerElement","newTileLayer","_temp","_ref","_tileLayerElement$dat","dataset","tile","tileUrl","minZoom","maxZoom","newTile","TileLayer","tms","name","console","warn","currentTile","options","Object","keys","join","safeParsePoint","pointJson","reverse","point","JSON","parse","reverseCoordinates","_","hyperleafletConfig","reverseOrderAll","utils","node","removeAttribute","setPolyGeometryEvents","leafletObject","id","on","e","event","clickedPoint","latlng","geometry","getLatLngs","rowId","window","dispatchEvent","_excluded","hyperChangeDetection","events","observe","targetSelector","uniqueAttribute","attributeFilter","this","Error","observer","MutationObserver","mutationsList","_removedNodes$filter","_addedNodes$filter","performance","now","removedNodes","forEach","mutation","type","push","findNodesWithAttribute","addedNodes","_attributeChange","attribute","attributeName","from","oldValue","to","target","getAttribute","changes","attributeChange","changedNode","length","publish","changedNodes","removedNodeMap","Map","jointNodeSet","Set","addNode","addNodeId","oldNode","get","add","isEqualNode","attributeChanges","reduce","_changes$push","_extends","filter","has","reallyAddedNodes","reallyRemovedNodes","t1","log","t0","newNode","attributes","every","nodes","result","nodeType","hasAttribute","apply","childNodes","childList","subtree","attributeOldValue","targetNode","document","querySelector","config","observeChangesInTarget","subscribe","evName","secondFunction","unsubscribe","fn","f","data","pubsub","_createMap","initMap","observeMap","HYPERLEAFLET_DATA_SOURCE","mapContainer","initialized","undefined","createHyperleafletMap","mapElement","mapView","leafletMap","whenReady","_createHyperleafletTi","tileLayerElementNodeList","tiles","tileLayerElementList","Array","Boolean","defaultHyperleafletTile","getDefaultHyperleafletTile","defaultTileLayerElement","find","t","TILE_LAYERS","tileController","hyperleafletTiles","control","layers","fromEntries","_ref2","createHyperleafletTiles","querySelectorAll","addTo","hyperleafletDataSource","geometryDisplay","callbackFunctions","_geometryObjectHandle","geometryObjectElement","createElement","setAttribute","innerText","body","appendChild","geometryObject","text","addToGeometryObject","_node$dataset","geometryType","coordinates","stringify","removeFromGeometryObject","geometryObjectHandler","addCallback","removeCallback","removeGeometryAttributes","_hyperleafletGeometry","_ref$addCallback","_ref$removeCallback","addNoteListToHyperleaflet","values","_layers","layer","hlID","error","createLeafletObject","l","toLowerCase","htmlAttr","imageOpacity","opacity","Number","L","imageOverlay","imageUrl","imageBounds","createL","popup","tooltip","reverseOrder","_dataset$options","icon","parsedGeometry","parsedOptions","leafletGeometry","marker","bindPopup","bindTooltip","getLatLng","createPointGeometry","polylineOptions","GeoJSON","coordsToLatLngs","polyline","createLineGeometry","polygon","createPolygonGeometry","createGeometry","addNodeToHyperleaflet","removeNodeListFromHyperleaflet","remove","deleteNodeFromHyperleaflet","changeNodesInHyperleaflet","change","partialChanges","partialChange","changeLeafletObject","concat","setLatLng","changePointGeometry","setLatLngs","changePolygonGeometry","changeGeometry","setStyle","setBounds","setUrl","setOpacity","changeL","changeNodeInHyperleaflet","hyperleafletGeometryHandler","hyperleafletDataToMap","hyperleaflet","sendHyperleafletReady","documentElement","createMap","addEventListener"],"mappings":"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"}