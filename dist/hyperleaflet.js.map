{"version":3,"file":"hyperleaflet.js","sources":["../src/Map/tiles.js","../src/Map/events.js","../src/Map/util.js","../src/config.js","../src/hyperleaflet.js","../src/Geometry/utils.js","../src/Geometry/events.js","../src/Geometry/hyperleaflet-geometry-handler.js","../src/Map/index.js","../src/Map/map.js","../src/Geometry/index.js","../src/Geometry/geometry-object-handler.js","../src/Geometry/leaflet-geometry.js"],"sourcesContent":["import { tileLayer } from 'leaflet';\n\nconst tileLayers = {\n  OpenStreetMap: tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n  }),\n  EsriWorldImagery: tileLayer(\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    {\n      attribution:\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n    },\n  ),\n};\n\nexport function addTileLayer(newTileLayer) {\n  if (tileLayers[newTileLayer.name]) {\n    console.warn(`Tile layer ${newTileLayer.name} already exists. Skipping.`);\n    return;\n  }\n  tileLayers[newTileLayer.name] = newTileLayer.tile;\n}\n\nexport default tileLayers;\n","function createGenericMapEvent(map, eventName) {\n  const bounds = map.getBounds();\n  const min = bounds.getSouthWest();\n  const max = bounds.getNorthEast();\n  const bboxString = bounds.toBBoxString();\n  const event = new CustomEvent(eventName, {\n    detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: { min, max }, bboxString },\n  });\n  return event;\n}\n\nexport default function setMapEvents(map) {\n  map.on('click', (e) => {\n    const event = new CustomEvent('map:click', { detail: { point: e.latlng } });\n    window.dispatchEvent(event);\n  });\n\n  map.whenReady(() => {\n    const event = createGenericMapEvent(map, 'map:load');\n    window.dispatchEvent(event);\n  });\n\n  map.on('zoomend', () => {\n    const event = createGenericMapEvent(map, 'map:zoom');\n    window.dispatchEvent(event);\n  });\n\n  map.on('move', () => {\n    const event = createGenericMapEvent(map, 'map:move');\n    window.dispatchEvent(event);\n  });\n\n  return map;\n}\n\nexport function sendHyperleafletReady(map) {\n  const event = createGenericMapEvent(map, 'hyperleaflet:ready');\n  window.dispatchEvent(event);\n}\n","import { control, TileLayer } from 'leaflet';\nimport tileLayers, { addTileLayer } from './tiles';\n\nexport function createCustomTileLayer(url, { minZoom, maxZoom, tms } = {}) {\n  return new TileLayer(url, { minZoom: minZoom || 0, maxZoom: maxZoom || 18, tms: !!tms });\n}\n\nexport function createTileController(tiles) {\n  return tiles.length ? control.layers(Object.fromEntries(tiles.map(({ name, tile }) => [name, tile]))) : null;\n}\n\nexport function parseTileLayerElement(tileLayerElement) {\n  const { tile, tileUrl, tms, minZoom, maxZoom } = tileLayerElement.dataset;\n  if (tileUrl) {\n    const newTile = createCustomTileLayer(tileUrl, { minZoom, maxZoom, tms: tms === 'true' });\n    addTileLayer({ name: tile, tile: newTile });\n  }\n  const currentTile = tileLayers[tile];\n  if (!currentTile) {\n    // eslint-disable-next-line no-console\n    console.warn(`${tile} is not in: \\n${Object.keys(tileLayers).join('\\n')}`);\n    return null;\n  }\n  currentTile.options.minZoom = minZoom;\n  currentTile.options.maxZoom = maxZoom;\n  return { tile: currentTile, name: tile };\n}\n\nfunction reverseCoordinates(point) {\n  return point.reverse();\n}\n\nexport function safeParsePoint(pointJson, reverse = false) {\n  try {\n    const point = JSON.parse(pointJson);\n    return reverse ? reverseCoordinates(point) : point;\n  } catch (_) {\n    return [0, 0];\n  }\n}\n","const hyperleafletConfig = {\n  reverseOrderAll: false,\n};\nexport default hyperleafletConfig;\n","import createMap from './Map';\n\nconst hyperleaflet = (function hyperleaflet() {\n  const { initMap, observeMap } = createMap();\n\n  document.addEventListener('DOMContentLoaded', () => {\n    initMap();\n    observeMap();\n  });\n})();\n\nexport default hyperleaflet;\n","export default function utils(node) {\n  node.removeAttribute('data-geometry');\n}\n","export function setPointEvents(leafletObject, id) {\n  leafletObject.on('click', (e) => {\n    const event = new CustomEvent('geometry:click', {\n      detail: { clickedPoint: e.latlng, geometry: leafletObject.getLatLng(), rowId: id }\n    });\n    window.dispatchEvent(event);\n  });\n}\n\nexport function setPolyGeometryEvents(leafletObject, id) {\n  leafletObject.on('click', (e) => {\n    const event = new CustomEvent('geometry:click', { detail: { clickedPoint: e.latlng, geometry: leafletObject.getLatLngs(), rowId: id } });\n    window.dispatchEvent(event);\n  });\n}\n","import createLeafletObject from './leaflet-geometry';\n\nfunction addNodeToHyperleaflet(node, map) {\n  const { dataset } = node;\n  const rowId = dataset.id;\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n\n  if (leafletLayers.find((layer) => layer.hlID === rowId)) {\n    // eslint-disable-next-line no-console\n    console.error(`%c${rowId}`, 'color:red', 'already exists', node);\n    return;\n  }\n\n  const leafletObject = createLeafletObject({ ...dataset });\n  leafletObject.hlID = rowId;\n  leafletObject.addTo(map);\n}\n\nfunction deleteNodeFromHyperleaflet(node, map) {\n  const rowId = node.dataset.id;\n\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n  const leafletObject = leafletLayers.find((layer) => layer.hlID === rowId);\n  leafletObject?.remove();\n}\n\nexport default function hyperleafletGeometryHandler(map, { addCallback = () => {}, removeCallback = () => {} }) {\n  const addNoteListToHyperleaflet = (nodes) => {\n    nodes.forEach((node) => {\n      addNodeToHyperleaflet(node, map);\n      addCallback(node);\n    });\n  };\n\n  function removeNodeListToHyperleaflet(nodes) {\n    nodes.forEach((node) => {\n      deleteNodeFromHyperleaflet(node, map);\n      removeCallback(node);\n    });\n  }\n\n  return { addNoteListToHyperleaflet, removeNodeListToHyperleaflet };\n}\n\nexport function diffNodesWithMap(mutations, map) {\n  // eslint-disable-next-line no-underscore-dangle\n  const leafletLayers = Object.values(map._layers);\n  const addList = [];\n  const removeList = [];\n\n  function getAddedNodes(nodes) {\n    nodes.forEach((node) => {\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\n        addList.push(node);\n      }\n      if (node.childNodes.length > 0) {\n        getAddedNodes(node.childNodes);\n      }\n    });\n  }\n\n  function getRemovedNodes(nodes) {\n    nodes.forEach((node) => {\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\n        removeList.push(node);\n      }\n      if (node.childNodes.length > 0) {\n        getRemovedNodes(node.childNodes);\n      }\n    });\n  }\n\n  mutations.forEach((mutation) => {\n    if (mutation.type === 'childList') {\n      getAddedNodes(mutation.addedNodes);\n      getRemovedNodes(mutation.removedNodes);\n    }\n  });\n\n  const filteredRemoveList =\n    removeList.filter((node) => !addList.some((addNode) => addNode.dataset.id === node.dataset.id)) ?? [];\n\n  const filteredAddList =\n    addList.filter((node) => !leafletLayers.some((leafletNode) => leafletNode.hlID === node.dataset.id)) ?? [];\n\n  return { addedNodes: filteredAddList, removedNodes: filteredRemoveList };\n}\n","import createHyperleafletMap, { createHyperleafletTiles } from './map';\nimport hyperleafletDataToMap from '../Geometry/index';\nimport { sendHyperleafletReady } from './events';\nimport hyperleafletConfig from '../config';\n\nfunction createMap() {\n  let initialized = false;\n  function initMap() {\n    const mapContainer = document.querySelector('#map');\n    if (mapContainer && !initialized) {\n      initialized = true;\n      const { reverseOrderAll } = mapContainer.dataset;\n      if (reverseOrderAll !== undefined) {\n        hyperleafletConfig.reverseOrderAll = true;\n      }\n\n      const map = createHyperleafletMap(mapContainer);\n\n      const tileLayerElementList = mapContainer.querySelectorAll('[data-tile]');\n      const { defaultHyperleafletTile, tileController } = createHyperleafletTiles(tileLayerElementList);\n\n      if (tileController) {\n        tileController.addTo(map);\n      }\n      defaultHyperleafletTile.addTo(map);\n      hyperleafletDataToMap(map);\n      window.hyperleaflet = { map };\n      sendHyperleafletReady(map);\n    }\n  }\n\n  function observeMap() {\n    const observer = new MutationObserver(() => {\n      const mapElement = document.querySelector('#map');\n      if (mapElement) {\n        initMap();\n      } else if (initialized) {\n        initialized = false;\n        delete window.hyperleaflet;\n      }\n    });\n    observer.observe(document.documentElement, { childList: true, subtree: true });\n  }\n\n  return { initMap, observeMap };\n}\nexport default createMap;\n","import { map } from 'leaflet';\nimport TILE_LAYERS from './tiles';\nimport setMapEvents from './events';\nimport { createTileController, parseTileLayerElement, safeParsePoint } from './util';\nimport hyperleafletConfig from '../config';\n\nexport function getDefaultHyperleafletTile(tileLayerElementList) {\n  const defaultTileLayerElement = tileLayerElementList.find((t) => 'defaultTile' in t.dataset);\n  if (defaultTileLayerElement && defaultTileLayerElement.dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[defaultTileLayerElement.dataset.tile];\n  }\n  if (tileLayerElementList.length && tileLayerElementList[0].dataset.tile in TILE_LAYERS) {\n    return TILE_LAYERS[tileLayerElementList[0].dataset.tile];\n  }\n  return TILE_LAYERS.OpenStreetMap;\n}\n\nexport function createHyperleafletTiles(tileLayerElementNodeList) {\n  const tileLayerElementList = Array.from(tileLayerElementNodeList);\n  const hyperleafletTiles = tileLayerElementList.map(parseTileLayerElement).filter(Boolean);\n  const defaultHyperleafletTile = getDefaultHyperleafletTile(tileLayerElementList);\n  const tileController = createTileController(hyperleafletTiles);\n  return {\n    defaultHyperleafletTile,\n    tileController,\n  };\n}\n\nexport default function createHyperleafletMap(mapElement) {\n  const { center, zoom, minZoom, maxZoom } = mapElement.dataset;\n  const { reverseOrderAll } = hyperleafletConfig;\n  const mapView = {\n    center: safeParsePoint(center, reverseOrderAll),\n    zoom: zoom || 1,\n  };\n  const leafletMap = map(mapElement, {\n    center: mapView.center,\n    zoom: mapView.zoom,\n    minZoom: minZoom || 0,\n    maxZoom: maxZoom || 18,\n  });\n  return setMapEvents(leafletMap);\n}\n","import geometryObjectHandler from './geometry-object-handler';\nimport removeGeometryAttributes from './utils';\nimport hyperleafletGeometryHandler, { diffNodesWithMap } from './hyperleaflet-geometry-handler';\n\nfunction hyperleafletDataToMap(map) {\n  const hyperleafletDataSource = document.querySelector('[data-hyperleaflet-source]');\n\n  if (!hyperleafletDataSource) return;\n\n  const geometryDisplay = hyperleafletDataSource.dataset.geometryDisplay || 'none';\n\n  let callbackFunctions = {};\n  if (geometryDisplay === 'json') {\n    const { addToGeometryObject, removeFromGeometryObject } = geometryObjectHandler();\n    callbackFunctions = {\n      addCallback: addToGeometryObject,\n      removeCallback: removeFromGeometryObject,\n    };\n  } else if (geometryDisplay === 'remove') {\n    callbackFunctions = {\n      addCallback: removeGeometryAttributes,\n      removeCallback: () => {},\n    };\n  }\n\n  const { addNoteListToHyperleaflet, removeNodeListToHyperleaflet } = hyperleafletGeometryHandler(\n    map,\n    callbackFunctions,\n  );\n\n  map.whenReady(() => {\n    const nodes = hyperleafletDataSource.querySelectorAll('[data-id]');\n    addNoteListToHyperleaflet(nodes);\n  });\n\n  function callback(mutations) {\n    const { addedNodes, removedNodes } = diffNodesWithMap(mutations, map);\n    addNoteListToHyperleaflet(addedNodes);\n    removeNodeListToHyperleaflet(removedNodes);\n  }\n\n  const observer = new MutationObserver(callback);\n\n  observer.observe(hyperleafletDataSource, {\n    childList: true, // observe direct children\n    subtree: true, // and lower descendants too\n    attributeFilter: ['data-id'],\n  });\n}\n\nexport default hyperleafletDataToMap;\n","export default function geometryObjectHandler(){\n  const geometryObjectElement = document.createElement('script');\n  geometryObjectElement.type = 'application/json';\n  geometryObjectElement.setAttribute('data-testid', 'json');\n  geometryObjectElement.innerText = '{}';\n  document.body.appendChild(geometryObjectElement);\n  \n  const geometryObject = JSON.parse(geometryObjectElement.text);\n  const addToGeometryObject = (node) =>  {\n    const { id, geometry, geometryType } = node.dataset;\n    node.removeAttribute('data-geometry');\n    geometryObject[id] = { type: geometryType, coordinates: JSON.parse(geometry) };\n    geometryObjectElement.text = JSON.stringify(geometryObject, null, 2);\n  }\n  const removeFromGeometryObject = (node) => {\n    const { id } = node.dataset;\n    delete geometryObject[id];\n    geometryObjectElement.text = JSON.stringify(geometryObject, null, 2);\n  }\n  return {addToGeometryObject, removeFromGeometryObject}\n}\n","import { marker, polyline, polygon, GeoJSON } from 'leaflet';\nimport { setPointEvents, setPolyGeometryEvents } from './events';\nimport hyperleafletConfig from '../config';\n\nconst createPointGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || (reverseOrder !== undefined)\n  const geometry = isLonLat ? [...parsedGeometry].reverse() : parsedGeometry;\n  const leafletGeometry = marker(geometry);\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPointEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nconst createLineGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || (reverseOrder !== undefined)\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 0) : parsedGeometry;\n  const leafletGeometry = polyline(geometry);\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPolyGeometryEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nconst createPolygonGeometry = (parsedGeometry, options) => {\n  const { reverseOrderAll, reverseOrder } = options;\n  const isLonLat = reverseOrderAll || (reverseOrder !== undefined)\n  const geometry = isLonLat ? GeoJSON.coordsToLatLngs(parsedGeometry, 1) : parsedGeometry;\n  const leafletGeometry = polygon(geometry);\n  if (options.popup) {\n    leafletGeometry.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    leafletGeometry.bindTooltip(options.tooltip);\n  }\n  setPolyGeometryEvents(leafletGeometry, options.id);\n  return leafletGeometry;\n};\n\nconst createGeometry = (geometryType) => (parsedGeometry, options) => {\n  switch (geometryType) {\n    case 'Point':\n      return createPointGeometry(parsedGeometry, options);\n    case 'LineString':\n      return createLineGeometry(parsedGeometry, options);\n    case 'Polygon':\n      return createPolygonGeometry(parsedGeometry, options);\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n};\n\nexport default function createLeafletObject(row) {\n  const { geometry, popup, tooltip, geometryType, id, reverseOrder } = row;\n  const parsedGeometry = JSON.parse(geometry);\n  const {reverseOrderAll} = hyperleafletConfig;\n  const createGeometryFn = createGeometry(geometryType);\n  return createGeometryFn(parsedGeometry, { popup, tooltip, id, reverseOrderAll, reverseOrder });\n}\n"],"names":["tileLayers","OpenStreetMap","tileLayer","attribution","EsriWorldImagery","createGenericMapEvent","map","eventName","bounds","getBounds","min","getSouthWest","max","getNorthEast","bboxString","toBBoxString","detail","zoom","getZoom","center","getCenter","bbox","parseTileLayerElement","tileLayerElement","newTileLayer","_temp","_ref","_tileLayerElement$dat","dataset","tile","tileUrl","minZoom","maxZoom","newTile","TileLayer","tms","name","console","warn","currentTile","options","Object","keys","join","safeParsePoint","pointJson","reverse","point","JSON","parse","reverseCoordinates","_","_createMap","initMap","observeMap","hyperleafletConfig","reverseOrderAll","utils","node","removeAttribute","setPolyGeometryEvents","leafletObject","id","on","e","event","CustomEvent","clickedPoint","latlng","geometry","getLatLngs","rowId","window","dispatchEvent","diffNodesWithMap","mutations","_removeList$filter","_addList$filter","leafletLayers","values","_layers","removeList","getAddedNodes","nodes","forEach","nodeType","matches","addList","push","childNodes","length","getRemovedNodes","mutation","type","addedNodes","removedNodes","filteredRemoveList","filter","some","addNode","leafletNode","hlID","mapContainer","document","querySelector","initialized","undefined","createHyperleafletMap","mapElement","mapView","leafletMap","whenReady","_createHyperleafletTi","tileLayerElementNodeList","tiles","tileLayerElementList","Array","from","Boolean","defaultHyperleafletTile","getDefaultHyperleafletTile","defaultTileLayerElement","find","t","TILE_LAYERS","tileController","hyperleafletTiles","control","layers","fromEntries","_ref2","createHyperleafletTiles","querySelectorAll","addTo","hyperleafletDataSource","geometryDisplay","callbackFunctions","geometryObjectHandler","geometryObjectElement","createElement","setAttribute","innerText","body","appendChild","geometryObject","text","addToGeometryObject","_node$dataset","geometryType","coordinates","stringify","removeFromGeometryObject","addCallback","removeCallback","_geometryObjectHandle","removeGeometryAttributes","hyperleafletGeometryHandler","_ref$addCallback","_ref$removeCallback","addNoteListToHyperleaflet","layer","error","row","popup","tooltip","reverseOrder","parsedGeometry","_extends","concat","leafletGeometry","marker","bindPopup","bindTooltip","getLatLng","createPointGeometry","GeoJSON","coordsToLatLngs","polyline","createLineGeometry","polygon","createPolygonGeometry","createGeometry","createGeometryFn","addNodeToHyperleaflet","removeNodeListToHyperleaflet","remove","deleteNodeFromHyperleaflet","_hyperleafletGeometry","MutationObserver","_diffNodesWithMap","observe","childList","subtree","attributeFilter","hyperleafletDataToMap","hyperleaflet","sendHyperleafletReady","documentElement","createMap","addEventListener"],"mappings":"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"}