{"version":3,"file":"hyperleaflet.umd.js","sources":["../../../src/events.js","../../../src/leaflet-geometry.js","../../../src/hyperleaflet-geometry-handler.js","../../../src/constants.js","../../../src/geometry-debugger.js","../../../src/remove-geometry-attribute.js","../../../src/hyperleaflet.js","../../../src/map-utils.js"],"sourcesContent":["export default function setMapEvents(map) {\n  map.on('click', (e) => {\n    const event = new CustomEvent('mapclick', { detail: { point: e.latlng } });\n    window.dispatchEvent(event);\n  });\n\n  map.on('zoomend', () => {\n    const event = new CustomEvent('mapzoom', {\n      detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: map.getBounds() },\n    });\n    window.dispatchEvent(event);\n  });\n\n  map.on('move', () => {\n    const event = new CustomEvent('mapmove', {\n      detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: map.getBounds() },\n    });\n    window.dispatchEvent(event);\n  });\n\n  return map;\n}\n\nexport function setGeometryEvents(leafletObject, id) {\n  leafletObject.on('click', () => {\n    const event = new CustomEvent('pointclick', { detail: { point: leafletObject.getLatLng(), rowId: id } });\n    window.dispatchEvent(event);\n  });\n}\n","import L from 'leaflet';\nimport { setGeometryEvents } from './events';\n\nconst createPointGeometry = (parsedGeometry, options) => {\n  const marker = L.marker(parsedGeometry);\n  if (options.popup) {\n    marker.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    marker.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(marker, options.id);\n  return marker;\n};\n\nconst createLineGeometry = (parsedGeometry, options) => {\n  const flippedGeometry = L.GeoJSON.coordsToLatLngs(parsedGeometry, 1);\n  const line = L.polyline(flippedGeometry);\n  if (options.popup) {\n    line.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    line.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(line, options.id);\n  return line;\n};\n\nconst createPolygonGeometry = (parsedGeometry, options) => {\n  const flippedGeometry = L.GeoJSON.coordsToLatLngs(parsedGeometry, 1);\n  const polygon = L.polygon(flippedGeometry);\n  if (options.popup) {\n    polygon.bindPopup(options.popup);\n  }\n  if (options.tooltip) {\n    polygon.bindTooltip(options.tooltip);\n  }\n  setGeometryEvents(polygon, options.id);\n  return polygon;\n};\n\nconst createGeometry = (geometryType) => (parsedGeometry, options) => {\n  switch (geometryType) {\n    case 'Point':\n      return createPointGeometry(parsedGeometry, options);\n    case 'LineString':\n      return createLineGeometry(parsedGeometry, options);\n    case 'Polygon':\n      return createPolygonGeometry(parsedGeometry, options);\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`${geometryType} is not supported`);\n      return null;\n  }\n};\n\nexport default function createLeafletObject(row) {\n  const { geometry, popup, tooltip, geometryType, id } = row;\n  const parsedGeometry = JSON.parse(geometry);\n\n  const createGeometryFn = createGeometry(geometryType);\n  return createGeometryFn(parsedGeometry, { popup, tooltip, id });\n}\n","import createLeafletObject from './leaflet-geometry';\n\nconst leafletObjectMap = new Map();\n\nfunction addNodeToHyperleaflet(node) {\n  const { dataset } = node;\n  const rowId = dataset.id;\n\n  if (rowId in leafletObjectMap) {\n    // eslint-disable-next-line no-console\n    console.error(`%c${rowId}`, 'color:red', 'already exists', node);\n    return [];\n  }\n\n  const leafletObject = createLeafletObject({ ...dataset });\n  leafletObjectMap.set(rowId, leafletObject);\n\n  return [leafletObject];\n}\n\nfunction deleteNodeFromHyperleaflet(node) {\n  const rowId = node.dataset.id;\n  const leafletObject = leafletObjectMap.get(rowId);\n  leafletObjectMap.delete(rowId);\n  return [leafletObject];\n}\n\nexport default function hyperleafletGeometryHandler(map, { addCallback = () => {}, removeCallback = () => {} }) {\n  const addNoteListToHyperleaflet = (nodes) => {\n    nodes.forEach((node) => {\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\n        const [leafletObject] = addNodeToHyperleaflet(node);\n        leafletObject.addTo(map);\n        addCallback(node);\n      }\n    });\n  };\n\n  function removeNodeListToHyperleaflet(nodes) {\n    nodes.forEach((node) => {\n      if (node.nodeType === 1 && node.matches('[data-id]')) {\n        const [leafletObject] = deleteNodeFromHyperleaflet(node);\n        leafletObject.remove();\n        removeCallback(node);\n      }\n    });\n  }\n\n  return { addNoteListToHyperleaflet, removeNodeListToHyperleaflet };\n}\n","import L from 'leaflet';\r\n\r\nconst TILE_LAYERS = {\r\n  OpenStreetMap: L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  }),\r\n  EsriWorldImagery: L.tileLayer(\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n    {\r\n      attribution:\r\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n    },\r\n  ),\r\n};\r\n\r\nexport default TILE_LAYERS;\r\n","const debugMode = document.createElement('script');\ndebugMode.type = 'application/json';\ndebugMode.setAttribute('data-testid', 'debug');\ndebugMode.innerText = '{}';\ndocument.body.appendChild(debugMode);\n\nconst debugObject = JSON.parse(debugMode.text);\nexport function addToDebug(node) {\n  const { id, geometry, geometryType } = node.dataset;\n  node.removeAttribute('data-geometry');\n  debugObject[id] = { type: geometryType, coordinates: JSON.parse(geometry) };\n  debugMode.text = JSON.stringify(debugObject, null, 2);\n}\n\nexport function deleteFromDebug(node) {\n  const { id } = node.dataset;\n  delete debugObject[id];\n  debugMode.text = JSON.stringify(debugObject, null, 2);\n}\n","export default function removeGeometryAttribute(node) {\n  node.removeAttribute('data-geometry');\n}\n","import L from 'leaflet';\nimport hyperleafletGeometryHandler from './hyperleaflet-geometry-handler';\nimport createHyperleafletMap, { createHyperleafletTiles } from './map-utils';\nimport { addToDebug, deleteFromDebug } from './geometry-debugger';\nimport removeGeometryAttributes from './remove-geometry-attribute';\n\nconst hyperleaflet = (function hyperleaflet() {\n  if (typeof L === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error('Hyperleaflet can not access Leaflet');\n    return undefined;\n  }\n\n  const mapContainer = document.querySelector('#map');\n  const map = createHyperleafletMap(mapContainer);\n  const hyperleafletDataContainer = document.querySelector('[hyperleaflet]');\n\n  const tileLayerElementList = mapContainer.querySelectorAll('[data-tile]');\n  const { defaultHyperleafletTile, tileController } = createHyperleafletTiles(tileLayerElementList);\n\n  if (tileController) {\n    tileController.addTo(map);\n  }\n  defaultHyperleafletTile.addTo(map);\n\n  const geometryDisplayStrategy = hyperleafletDataContainer.dataset.geometryDisplay || 'object';\n\n  let callbackFunctions = {};\n  if (geometryDisplayStrategy === 'object') {\n    callbackFunctions = {\n      addCallback: addToDebug,\n      removeCallback: deleteFromDebug,\n    };\n  } else if (geometryDisplayStrategy === 'remove') {\n    callbackFunctions = {\n      addCallback: removeGeometryAttributes,\n      removeCallback: () => {},\n    };\n  }\n\n  const { addNoteListToHyperleaflet, removeNodeListToHyperleaflet } = hyperleafletGeometryHandler(\n    map,\n    callbackFunctions,\n  );\n\n  map.whenReady(() => {\n    const nodes = hyperleafletDataContainer.querySelectorAll('[data-id]');\n    addNoteListToHyperleaflet(nodes);\n  });\n\n  function callback(mutations) {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        addNoteListToHyperleaflet(mutation.addedNodes);\n        removeNodeListToHyperleaflet(mutation.removedNodes);\n      }\n    });\n  }\n\n  const observer = new MutationObserver(callback);\n\n  observer.observe(hyperleafletDataContainer, {\n    childList: true, // observe direct children\n    subtree: true, // and lower descendants too\n    attributeFilter: ['data-id'],\n  });\n\n  const addGeoJsonToMap = (geoJson) => {\n    L.geoJSON(geoJson).addTo(map);\n  };\n\n  return { map, addGeoJsonToMap };\n})();\n\nexport default hyperleaflet;\n","import L from 'leaflet';\nimport TILE_LAYERS from './constants';\nimport setMapEvents from './events';\n\nexport function createHyperleafletTiles(tileLayerElementNodeList) {\n  const tileLayerElementList = Array.from(tileLayerElementNodeList);\n  const hyperleafletTiles = tileLayerElementList\n    .map((tileLayerElement) => {\n      const { tile, minZoom, maxZoom } = tileLayerElement.dataset;\n\n      const currentTile = TILE_LAYERS[tile];\n      if (!currentTile) {\n        // eslint-disable-next-line no-console\n        console.warn(`${tile} is not in: \\n${Object.keys(TILE_LAYERS).join('\\n')}`);\n        return null;\n      }\n      currentTile.options.minZoom = minZoom;\n      currentTile.options.maxZoom = maxZoom;\n      currentTile.name = tile;\n      return { tile: currentTile };\n    })\n    .filter(Boolean);\n  const defaultHyperleafletTileName = tileLayerElementList.find((t) => 'defaultTile' in t.dataset)?.dataset.tile;\n  const defaultHyperleafletTile = TILE_LAYERS[defaultHyperleafletTileName];\n  return {\n    defaultHyperleafletTile: defaultHyperleafletTile ?? TILE_LAYERS.OpenStreetMap,\n    tileController: hyperleafletTiles.length\n      ? L.control.layers(Object.fromEntries(hyperleafletTiles.map((t) => [t.tile.name, t.tile])))\n      : null,\n  };\n}\n\nexport default function createHyperleafletMap(mapElement) {\n  const { center, zoom } = mapElement.dataset;\n\n  const mapView = {\n    center: center?.split(','),\n    zoom: zoom || 1,\n  };\n  const map = L.map(mapElement).setView(mapView.center, mapView.zoom);\n  return setMapEvents(map);\n}\n"],"names":["leafletObject","id","on","CustomEvent","detail","point","getLatLng","rowId","window","dispatchEvent","event","leafletObjectMap","Map","TILE_LAYERS","OpenStreetMap","L","tileLayer","attribution","EsriWorldImagery","debugMode","document","createElement","type","setAttribute","innerText","body","appendChild","debugObject","JSON","parse","text","node","dataset","geometry","geometryType","_node$dataset","removeAttribute","coordinates","stringify","deleteFromDebug","removeGeometryAttribute","mapContainer","querySelector","map","mapElement","_mapElement$dataset","center","zoom","split","setView","mapView","e","latlng","getZoom","getCenter","bbox","getBounds","createHyperleafletMap","createHyperleafletTiles","tileLayerElementNodeList","_tileLayerElementList","tileLayerElementList","Array","from","hyperleafletTiles","tileLayerElement","tile","maxZoom","_tileLayerElement$dat","currentTile","options","minZoom","name","console","warn","Object","keys","join","filter","Boolean","defaultHyperleafletTileName","find","t","defaultHyperleafletTile","tileController","length","control","layers","fromEntries","querySelectorAll","_createHyperleafletTi","addTo","hyperleafletDataContainer","geometryDisplay","callbackFunctions","geometryDisplayStrategy","addCallback","addToDebug","removeCallback","removeGeometryAttributes","_hyperleafletGeometry","_ref","_ref$addCallback","_ref$removeCallback","addNoteListToHyperleaflet","nodes","forEach","nodeType","matches","error","row","popup","tooltip","parsedGeometry","_extends","marker","bindPopup","bindTooltip","setGeometryEvents","createPointGeometry","flippedGeometry","GeoJSON","coordsToLatLngs","line","polyline","polygon","createPolygonGeometry","createGeometry","createGeometryFn","set","addNodeToHyperleaflet","removeNodeListToHyperleaflet","deleteNodeFromHyperleaflet","get","_deleteNodeFromHyperl","remove","hyperleafletGeometryHandler","whenReady","MutationObserver","mutations","mutation","addedNodes","removedNodes","observe","childList","subtree","attributeFilter","addGeoJsonToMap","geoJson","geoJSON"],"mappings":"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"}