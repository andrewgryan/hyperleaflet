{"version":3,"file":"hyperleaflet.umd.js","sources":["../../../src/constants.js","../../../src/events.js","../../../src/hyperleaflet.js","../../../src/leaflet_utils.js"],"sourcesContent":["import L from 'leaflet';\r\n\r\nconst TILE_LAYERS = {\r\n  OpenStreetMap: L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n  }),\r\n  EsriWorldImagery: L.tileLayer(\r\n    'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n    {\r\n      attribution:\r\n        'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n    },\r\n  ),\r\n};\r\n\r\nexport default TILE_LAYERS;\r\n","export default function initMapEvents(map) {\r\n  map.on('click', (e) => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('mapclick', { detail: { point: e.latlng } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n\r\n  map.on('zoomend', () => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('mapzoom', { detail: { zoom: map.getZoom() } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n\r\n  map.on('move', () => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('mapmove', { detail: { bbox: map.getBounds(), center: map.getCenter() } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n}\r\n\r\nexport function setGeometryEvents(geometry, id) {\r\n  geometry.on('click', (e) => {\r\n    const elem = document.getElementById('map');\r\n    const event = new CustomEvent('pointclick', { detail: { point: e.latlng, rowId: id } });\r\n    elem.dispatchEvent(event);\r\n  });\r\n}","import L from 'leaflet';\nimport TILE_LAYERS from './constants';\nimport initEvents from './events';\nimport createLeafletObject from './leaflet_utils';\n\nconst hyperleaflet = (function hyperleaflet() {\n  if (typeof L === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error('Hyperleaf can not access Leaflet');\n    return undefined;\n  }\n\n  const hyperleafletContainer = document.querySelector('[hyperleaflet]');\n\n  const debugMode = document.createElement('script');\n  debugMode.type = 'application/json';\n  debugMode.innerText = `{}`;\n  document.body.appendChild(debugMode);\n  const debugData = JSON.parse(debugMode.text);\n\n  const mapDiv = document.querySelector('#map');\n  const tileLayerDivs = mapDiv.querySelectorAll('[data-tile]');\n\n  const initalMapAttributes = {\n    center: [0, 0],\n    zoom: 1,\n    tile: TILE_LAYERS.OpenStreetMap,\n  };\n\n  const { dataset } = mapDiv;\n\n  const center = dataset?.center.split(',') || initalMapAttributes.center.center;\n  const zoom = dataset?.zoom || initalMapAttributes.zoom;\n  let { tile } = initalMapAttributes;\n\n  const tiles = {};\n\n  tileLayerDivs.forEach((tileLayer) => {\n    const { dataset: tileLayerDataset } = tileLayer;\n    const tileLayerName = tileLayerDataset.tile;\n    if (tileLayerName in TILE_LAYERS) {\n      const currentTile = TILE_LAYERS[tileLayerName];\n      currentTile.options.minZoom = tileLayerDataset.minZoom;\n      currentTile.options.maxZoom = tileLayerDataset.maxZoom;\n      tiles[tileLayerName] = currentTile;\n      if ('default' in tileLayerDataset) {\n        tile = currentTile;\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(`${tileLayerName} is not in: \\n${Object.keys(TILE_LAYERS).join('\\n')}`);\n    }\n  });\n\n  const map = L.map(mapDiv).setView(center, zoom);\n\n  initEvents(map);\n\n  if (Object.keys(tiles).length) {\n    L.control.layers(tiles).addTo(map);\n  }\n  tile.addTo(map);\n\n  const leafletObjects = {};\n\n  const proxy = new Proxy(leafletObjects, {\n    set(target, property, value) {\n      const geometry = createLeafletObject(value);\n      if (geometry) {\n        geometry.addTo(map);\n        target[property] = geometry;\n      } else {\n        console.warn(`Geometry with ${property} can not be created`);\n      }\n      return true;\n    },\n    deleteProperty(target, property) {\n      target[property].remove();\n      delete target[property];\n      return true;\n    },\n  });\n\n  function addNodeToHyperleaf(node) {\n    const { dataset: data } = node;\n    const rowId = data.id;\n    proxy[rowId] = { ...data };\n    return [rowId, data.geometry];\n  }\n  function deleteNodeFromHyperleaflet(node) {\n    const rowId = node.dataset.id;\n    delete proxy[rowId];\n    return rowId;\n  }\n\n  (() => {\n    hyperleafletContainer.querySelectorAll('[data-id]').forEach((node) => {\n      const [rowId, geometry] = addNodeToHyperleaf(node);\n      debugData[rowId] = JSON.parse(geometry);\n      debugMode.text = JSON.stringify(debugData, null, 2);\n    });\n  })();\n\n  function callback(mutations) {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        mutation.addedNodes.forEach((node) => {\n          if (node.nodeType === 1 && node.hasAttribute('data-id')) {\n            const [rowId, geometry] = addNodeToHyperleaf(node);\n            debugData[rowId] = JSON.parse(geometry);\n          }\n        });\n        mutation.removedNodes.forEach((node) => {\n          if (node.nodeType === 1 && node.hasAttribute('data-id')) {\n            const rowId = deleteNodeFromHyperleaflet(node);\n            delete debugData[rowId];\n          }\n        });\n      }\n    });\n    debugMode.text = JSON.stringify(debugData, null, 2);\n  }\n\n  const observer = new MutationObserver(callback);\n\n  observer.observe(hyperleafletContainer, {\n    childList: true, // observe direct children\n    subtree: true, // and lower descendants too\n    attributeFilter: ['data-id'],\n  });\n\n  const addGeoJsonToMap = (geoJson) => {\n    console.log(\"first\")\n    L.geoJSON(geoJson).addTo(map);\n  };\n\n  return { map, addGeoJsonToMap };\n})();\n\nexport default hyperleaflet;\n","import L from 'leaflet';\r\nimport { setGeometryEvents } from './events';\r\n\r\nexport default function createLeafletObject(row) {\r\n  const { geometry, popup, tooltip, geometryType, id } = row;\r\n  const parsedGeometry = JSON.parse(geometry);\r\n  switch (geometryType) {\r\n    case 'Point': {\r\n      const marker = L.marker(parsedGeometry);\r\n      if (popup) {\r\n        marker.bindPopup(popup);\r\n      }\r\n      if (tooltip) {\r\n        marker.bindTooltip(tooltip);\r\n      }\r\n      setGeometryEvents(marker, id);\r\n      return marker;\r\n    }\r\n    case 'LineString': {\r\n      const flippedGeometry = L.GeoJSON.coordsToLatLngs(parsedGeometry, 1);\r\n      const line = L.polyline(flippedGeometry);\r\n      if (popup) {\r\n        line.bindPopup(popup);\r\n      }\r\n      if (tooltip) {\r\n        line.bindTooltip(tooltip);\r\n      }\r\n      setGeometryEvents(line, id);\r\n      return line;\r\n    }\r\n    case 'Polygon': {\r\n      const flippedGeometry = L.GeoJSON.coordsToLatLngs(parsedGeometry, 1);\r\n      const polygon = L.polygon(flippedGeometry);\r\n      if (popup) {\r\n        polygon.bindPopup(popup);\r\n      }\r\n      if (tooltip) {\r\n        polygon.bindTooltip(tooltip);\r\n      }\r\n      setGeometryEvents(polygon, id);\r\n      return polygon;\r\n    }\r\n    default: {\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`${geometryType} is not supported`);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"],"names":["TILE_LAYERS","OpenStreetMap","L","tileLayer","attribution","EsriWorldImagery","setGeometryEvents","geometry","id","on","e","document","getElementById","event","CustomEvent","detail","point","latlng","rowId","elem","dispatchEvent","hyperleafletContainer","querySelector","createElement","debugMode","type","innerText","body","appendChild","JSON","parse","text","tileLayerDivs","mapDiv","querySelectorAll","initalMapAttributes","center","zoom","tile","dataset","split","tiles","forEach","tileLayerDataset","tileLayerName","currentTile","options","minZoom","maxZoom","console","warn","Object","keys","join","map","setView","getZoom","bbox","getBounds","getCenter","initEvents","length","control","layers","addTo","proxy","Proxy","set","target","property","value","row","popup","tooltip","geometryType","parsedGeometry","marker","bindPopup","bindTooltip","flippedGeometry","GeoJSON","coordsToLatLngs","line","polyline","_flippedGeometry","polygon","createLeafletObject","deleteProperty","remove","node","addNodeToHyperleaf","debugData","_addNodeToHyperleaf","stringify","MutationObserver","mutations","mutation","addedNodes","nodeType","hasAttribute","removedNodes","deleteNodeFromHyperleaflet","observe","childList","subtree","attributeFilter","addGeoJsonToMap","geoJson","log","geoJSON","data","_extends","error"],"mappings":"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"}